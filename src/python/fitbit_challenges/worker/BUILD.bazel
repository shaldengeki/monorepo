load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@py_deps//:requirements.bzl", "requirement")
load("@rules_oci//oci:defs.bzl", "oci_tarball")
load("@rules_python//python:defs.bzl", "py_binary")
load("//src/python:py_layer.bzl", "py_oci_image")

py_binary(
    name = "binary",
    srcs = [
        "__init__.py",
        "app.py",
    ],
    imports = [".."],
    main = "app.py",
    deps = [
        "//src/python/fitbit_challenges:config_py",
        "//src/python/fitbit_challenges:fitbit_client_py",
        "//src/python/fitbit_challenges:models_py",
        requirement("requests"),
        requirement("sqlalchemy"),
        requirement("graphql_server"),
    ],
)

# Construct an image that has three layers.
# The result will look like this:
#    bazel run //src/python/fitbit_challenges/api:tarball
#
#2f2353bd5bea: Loading layer [==================================================>]  47.13MB/47.13MB
#f02532d45017: Loading layer [==================================================>]   3.62MB/3.62MB
#9296e9071c11: Loading layer [==================================================>]  16.24kB/16.24kB
py_oci_image(
    name = "image",
    base = "@python3_image",
    binary = ":binary",
    entrypoint = ["/src/python/fitbit_challenges/worker/binary"],
    env = {
        "FLASK_APP": "app.py",
        "FLASK_DEBUG": "True",
        "API_PORT": "5000",
        "FRONTEND_PROTOCOL": "http",
        "FRONTEND_HOST": "frontend",
        "FRONTEND_PORT": "5001",
        "DB_HOST": "pg",
        "DB_USERNAME": "admin",
        "DB_PASSWORD": "development",
        "DATABASE_NAME": "api_development",
        "FITBIT_CLIENT_ID": "testing",
        "FITBIT_CLIENT_SECRET": "testing",
        "FITBIT_VERIFICATION_CODE": "testing",
        "FLASK_SECRET_KEY": "testing",
    },
)

platform(
    name = "aarch64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

platform(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

platform_transition_filegroup(
    name = "platform_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":aarch64_linux",
        "@platforms//cpu:x86_64": ":x86_64_linux",
    }),
)

# $ bazel run //src/python/fitbit_challenges/worker:tarball
# $ docker run --rm shaldengeki/fitbit-challenges-worker:latest
oci_tarball(
    name = "tarball",
    image = ":platform_image",
    repo_tags = ["shaldengeki/fitbit-challenges-worker:latest"],
)
