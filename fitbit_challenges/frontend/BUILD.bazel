load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@aspect_rules_webpack//webpack:defs.bzl", "webpack_bundle")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//fitbit_challenges/frontend:tailwindcss/package_json.bzl", tailwindcss_bin = "bin")

npm_link_all_packages(name = "node_modules")

TYPE_DEPS = [
    ":node_modules/@types/jest",
    ":node_modules/@types/lodash",
    ":node_modules/@types/node",
    ":node_modules/@types/react",
    ":node_modules/@types/react-dom",
]

TEST_DEPS = [
    ":node_modules/@apollo/react-testing",
    ":node_modules/@testing-library/jest-dom",
    ":node_modules/@testing-library/react",
    ":node_modules/jest-environment-jsdom",
    ":node_modules/jsdom",
]

BUILD_DEPS = [
    ":node_modules/@apollo/client",
    ":node_modules/lodash",
    ":node_modules/react",
    ":node_modules/react-canvas-confetti",
    ":node_modules/react-dom",
    ":node_modules/react-router-dom",
]

tailwindcss_bin.tailwindcss(
    name = "tailwindcss",
    srcs = [
        "src/App.src.css",
        ":tailwind.config.js",
        ":node_modules/tailwindcss",
    ],
    outs = [
        "src/App.css",
    ],
    args = [
        "--config fitbit_challenges/frontend/tailwind.config.js",
        "-i fitbit_challenges/frontend/src/App.src.css",
        "-o fitbit_challenges/frontend/src/App.css"
    ],
    log_level = "debug",
)

ts_project(
    name = "ts",
    allow_js = True,
    assets = [
        "src/App.src.css",
        # "src/index.css",
        "src/logo.svg",
        "src/components/fitbit.png",
        "src/components/logo192.png",
    ],
    out_dir = ".",
    resolve_json_module = True,
    transpiler = "tsc",
    deps = BUILD_DEPS + TEST_DEPS + TYPE_DEPS,
)

webpack_bundle(
    name = "webpack",
    node_modules = ":node_modules",
    srcs = [":ts", ":tailwindcss"],
    entry_point = "src/index.js",
    deps = BUILD_DEPS + [
        ":node_modules/css-loader",
        ":node_modules/file-loader",
        ":node_modules/style-loader",
    ],
    chdir = package_name(),
    webpack_config = ":webpack.config.js",
)

jest_test(
    name = "test",
    config = "jest.config.json",
    data = [
        "package.json",
    ] + BUILD_DEPS + TEST_DEPS + [
        "mocks/fileMock.js",
        "src/DateUtils.js",
        "src/DateUtils.test.js",
        "src/components/BingoChallenge.js",
        "src/components/BingoChallenge.test.js",
        "src/components/Confetti.js",
        "src/components/FormButton.js",
        "src/components/FormButton.test.js",
        "src/components/NavBar.js",
        "src/components/PageContainer.js",
        "src/components/PageTitle.js",
        "src/components/ProgressBar.js",
        "src/components/StepChallenge.js",
        "src/components/StepChallenge.test.js",
        "src/components/UserActivityForm.js",
        "src/components/UserActivityLog.js",
        "src/components/UserLeaderboard.js",
        "src/components/WeekendWarrior.js",
        "src/components/WorkweekHustle.js",
        "src/globals.d.ts",
        "src/setupTests.js",
        "src/types/Activity.js",
        "src/types/Bingo.js",
        "src/types/Challenge.js",
        "src/types/User.js",
        "src/views/ChallengeView.js",
        "src/views/ChallengeView.test.js",
    ],
    node_modules = ":node_modules",
    node_options = [
        "--experimental-vm-modules",
    ],
)
