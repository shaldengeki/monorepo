load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//fitbit_challenges/frontend:tailwindcss/package_json.bzl", tailwindcss_bin = "bin")
load("//tools/build_rules:frontend_image.bzl", "frontend_image", "BUILD_DEPS")

# Dependencies required to do typechecks.
TYPE_DEPS = [
    ":node_modules/@types/jest",
    ":node_modules/@types/lodash",
    ":node_modules/@types/node",
    ":node_modules/@types/react",
    ":node_modules/@types/react-dom",
]

# Dependencies required to run tests.
TEST_DEPS = [
    ":node_modules/@apollo/react-testing",
    ":node_modules/@testing-library/jest-dom",
    ":node_modules/@testing-library/react",
    ":node_modules/jest-environment-jsdom",
    ":node_modules/jsdom",
]

# To update pnpm-lock.yaml, run:
# bazel run -- @pnpm//:pnpm --dir $PWD install --lockfile-only
npm_link_all_packages(name = "node_modules")

# Compiles our CSS using Tailwind styles.
# Uses the tailwindcss binary from npm.
tailwindcss_bin.tailwindcss(
    name = "tailwindcss",
    srcs = [
        "src/App.src.css",
        ":tailwind.config.js",
        ":node_modules/tailwindcss",
        ":ts",
    ],
    outs = [
        "src/App.css",
    ],
    args = [
        "--config fitbit_challenges/frontend/tailwind.config.js",
        "-i fitbit_challenges/frontend/src/App.src.css",
        "-o fitbit_challenges/frontend/src/App.css"
    ],
    log_level = "debug",
)

# Compiles Typescript to regular old Javascript.
ts_project(
    name = "ts",
    allow_js = True,
    srcs = glob(
        include = [
            "src/**/*.tsx",
            "src/**/*.ts",
            "src/**/*.jsx",
            "src/**/*.js",
            "tsconfig.json",
        ]
    ),
    assets = [
        "src/App.src.css",
        "src/logo.svg",
        "src/components/fitbit.png",
        "src/components/logo192.png",
    ],
    out_dir = ".",
    resolve_json_module = True,
    transpiler = "tsc",
    deps = BUILD_DEPS + TEST_DEPS + TYPE_DEPS,
)

frontend_image(
    name = "production",
    server_name = "fitbit.ouguo.us",
    node_modules = ":node_modules",
    webpack_conf = ":webpack.config.js",
    build_env = {
        "REACT_APP_API_HOST": "api.fitbit.ouguo.us",
        "REACT_APP_API_PORT": "443",
        "REACT_APP_API_PROTOCOL": "https",
    },
    repo_tags = ["shaldengeki/fitbit-challenges-frontend:latest"],
    docker_hub_repository = "docker.io/shaldengeki/fitbit-challenges-frontend",
)

# Runs frontend Jest tests.
jest_test(
    name = "test",
    config = "jest.config.json",
    data = [
        "package.json",
    ] + BUILD_DEPS + TEST_DEPS + [
        "mocks/fileMock.js",
        "src/DateUtils.js",
        "src/DateUtils.test.js",
        "src/components/BingoChallenge.js",
        "src/components/BingoChallenge.test.js",
        "src/components/Confetti.js",
        "src/components/FormButton.js",
        "src/components/FormButton.test.js",
        "src/components/NavBar.js",
        "src/components/PageContainer.js",
        "src/components/PageTitle.js",
        "src/components/ProgressBar.js",
        "src/components/StepChallenge.js",
        "src/components/StepChallenge.test.js",
        "src/components/UserActivityForm.js",
        "src/components/UserActivityLog.js",
        "src/components/UserLeaderboard.js",
        "src/components/WeekendWarrior.js",
        "src/components/WorkweekHustle.js",
        "src/globals.d.ts",
        "src/setupTests.js",
        "src/types/Activity.js",
        "src/types/Bingo.js",
        "src/types/Challenge.js",
        "src/types/User.js",
        "src/views/ChallengeView.js",
        "src/views/ChallengeView.test.js",
    ],
    node_modules = ":node_modules",
    node_options = [
        "--experimental-vm-modules",
    ],
)
