load("@rules_python//python:defs.bzl", "py_binary")
load("//tools/build_rules/worker:defs.bzl", "worker")

py_binary(
    name = "binary",
    srcs = [
        "__init__.py",
        "app.py",
    ],
    imports = [".."],
    main = "app.py",
    deps = [
        "//fitbit_challenges:config_py",
        "//fitbit_challenges:fitbit_client_py",
        "//fitbit_challenges:models_py",
        "//scripts:wait_for_postgres",
        "@py_deps//graphql_server",
        "@py_deps//requests",
        "@py_deps//sqlalchemy",
    ],
)

worker(
    name = "worker",
    binary = "//fitbit_challenges/worker:binary",
    docker_hub_repository = "docker.io/shaldengeki/fitbit-challenges-worker",
    env = {
        "DATABASE_URL": "test-database-url",
        "FITBIT_CLIENT_ID": "testing",
        "FITBIT_CLIENT_SECRET": "testing",
        "FITBIT_VERIFICATION_CODE": "testing",
    },
    repo_tags = ["shaldengeki/fitbit-challenges-worker:latest"],
)

py_binary(
    name = "app",
    srcs = ["app.py"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//fitbit_challenges:config_py",
        "//fitbit_challenges:fitbit_client_py",
        "//fitbit_challenges:models_py",
        "@py_deps//sqlalchemy",
    ],
)
