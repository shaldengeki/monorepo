module(
    name = "monorepo",
    repo_name = "com_github_shaldengeki_monorepo",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")

# protoc toolchain setup.
bazel_dep(name = "toolchains_protoc", version = "0.3.7")

protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    # Creates a repository to satisfy well-known-types dependencies such as
    # deps=["@com_google_protobuf//:any_proto"]
    google_protobuf = "com_google_protobuf",
    # Pin to any version of protoc
    version = "v29.3",
)
use_repo(protoc, "com_google_protobuf", "toolchains_protoc_hub")

register_toolchains("@toolchains_protoc_hub//:all")

register_toolchains("//tools/protoc:all")

# python setup.
bazel_dep(name = "rules_python", version = "1.2.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.12",
)
use_repo(python, "python_3_12")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "py_deps",
    python_version = "3.12",
    requirements_lock = "//:requirements.lock.txt",
)
use_repo(pip, "py_deps")

# rules_oci setup.
bazel_dep(name = "rules_oci", version = "2.2.3")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "ubuntu_image",
    digest = "sha256:67211c14fa74f070d27cc59d69a7fa9aeff8e28ea118ef3babc295a0428a6d21",
    image = "ubuntu",
    platforms = [
        "linux/arm64/v8",
        "linux/amd64",
    ],
)
use_repo(oci, "ubuntu_image")
oci.pull(
    name = "python3_image",
    digest = "sha256:5c73034c2bc151596ee0f1335610735162ee2b148816710706afec4757ad5b1e",
    image = "python",
    platforms = [
        "linux/386",
        "linux/amd64",
        "linux/arm/v5",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/ppc64le",
        "linux/s390x",
    ],
)
use_repo(oci, "python3_image")
oci.pull(
    name = "nginx_debian_slim",
    digest = "sha256:6b06964cdbbc517102ce5e0cef95152f3c6a7ef703e4057cb574539de91f72e6",
    image = "docker.io/library/nginx",
    platforms = [
        "linux/386",
        "linux/amd64",
        "linux/arm/v5",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/ppc64le",
        "linux/s390x",
    ],
)
use_repo(oci, "nginx_debian_slim", "nginx_debian_slim_linux_386", "nginx_debian_slim_linux_amd64", "nginx_debian_slim_linux_arm64_v8", "nginx_debian_slim_linux_arm_v5", "nginx_debian_slim_linux_arm_v7", "nginx_debian_slim_linux_ppc64le", "nginx_debian_slim_linux_s390x", "python3_image_linux_386", "python3_image_linux_amd64", "python3_image_linux_arm64_v8", "python3_image_linux_arm_v5", "python3_image_linux_arm_v7", "python3_image_linux_ppc64le", "python3_image_linux_s390x", "ubuntu_image_linux_amd64", "ubuntu_image_linux_arm64_v8")

# js setup.
bazel_dep(name = "aspect_rules_js", version = "2.2.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    # To update, run bazel run -- @pnpm//:pnpm --dir $PWD install --lockfile-only
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")

bazel_dep(name = "aspect_rules_ts", version = "3.5.1")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

bazel_dep(name = "aspect_rules_jest", version = "0.22.0")
bazel_dep(name = "aspect_rules_webpack", version = "0.16.0")
bazel_dep(name = "rules_pkg", version = "1.1.0")

# golang setup.
bazel_dep(name = "rules_go", version = "0.53.0")
bazel_dep(name = "gazelle", version = "0.42.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.module(
    # build_file_proto_mode = "disable",
    path = "google.golang.org/grpc",
    sum = "h1:kF77BGdPTQ4/JZWMlb9VpJ5pa25aqvVqogsxNHHdeBg=",
    version = "v1.71.0",
)
go_deps.module(
    path = "golang.org/x/net",
    sum = "h1:T5GQRQb2y08kTAByq9L4/bz8cipCdA8FbRTXewonqY8=",
    version = "v0.35.0",
)
go_deps.module(
    path = "golang.org/x/text",
    sum = "h1:bofq7m3/HAFvbF51jz3Q9wLg3jkvSPuiZu/pD1XwgtM=",
    version = "v0.22.0",
)
go_deps.module(
    path = "github.com/stretchr/testify",
    sum = "h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=",
    version = "v1.10.0",
)
use_repo(
    go_deps,
    "com_github_stretchr_testify",
    "org_golang_google_grpc",
    "org_golang_x_net",
    "org_golang_x_text",
)

bazel_dep(name = "rules_python_gazelle_plugin", version = "1.2.0")
