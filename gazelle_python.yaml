# GENERATED FILE - DO NOT EDIT!
#
# To update this file, run:
#   bazel run //:gazelle_python_manifest.update

manifest:
  modules_mapping:
    30fcd23745efe32ce681__mypyc: black
    7f0197f6d050da244d93__mypyc: mypy
    alembic: alembic
    alembic.autogenerate: alembic
    alembic.autogenerate.api: alembic
    alembic.autogenerate.compare: alembic
    alembic.autogenerate.render: alembic
    alembic.autogenerate.rewriter: alembic
    alembic.command: alembic
    alembic.config: alembic
    alembic.context: alembic
    alembic.ddl: alembic
    alembic.ddl.base: alembic
    alembic.ddl.impl: alembic
    alembic.ddl.mssql: alembic
    alembic.ddl.mysql: alembic
    alembic.ddl.oracle: alembic
    alembic.ddl.postgresql: alembic
    alembic.ddl.sqlite: alembic
    alembic.environment: alembic
    alembic.migration: alembic
    alembic.op: alembic
    alembic.operations: alembic
    alembic.operations.base: alembic
    alembic.operations.batch: alembic
    alembic.operations.ops: alembic
    alembic.operations.schemaobj: alembic
    alembic.operations.toimpl: alembic
    alembic.runtime: alembic
    alembic.runtime.environment: alembic
    alembic.runtime.migration: alembic
    alembic.script: alembic
    alembic.script.base: alembic
    alembic.script.revision: alembic
    alembic.script.write_hooks: alembic
    alembic.templates.async.env: alembic
    alembic.templates.generic.env: alembic
    alembic.templates.multidb.env: alembic
    alembic.testing: alembic
    alembic.testing.assertions: alembic
    alembic.testing.env: alembic
    alembic.testing.fixtures: alembic
    alembic.testing.plugin: alembic
    alembic.testing.plugin.bootstrap: alembic
    alembic.testing.requirements: alembic
    alembic.testing.schemacompare: alembic
    alembic.testing.suite: alembic
    alembic.testing.suite.test_autogen_comments: alembic
    alembic.testing.suite.test_autogen_computed: alembic
    alembic.testing.suite.test_autogen_diffs: alembic
    alembic.testing.suite.test_autogen_fks: alembic
    alembic.testing.suite.test_autogen_identity: alembic
    alembic.testing.suite.test_environment: alembic
    alembic.testing.suite.test_op: alembic
    alembic.testing.util: alembic
    alembic.testing.warnings: alembic
    alembic.util: alembic
    alembic.util.compat: alembic
    alembic.util.editor: alembic
    alembic.util.exc: alembic
    alembic.util.langhelpers: alembic
    alembic.util.messaging: alembic
    alembic.util.pyfiles: alembic
    alembic.util.sqla_compat: alembic
    asn1crypto: asn1crypto
    asn1crypto.algos: asn1crypto
    asn1crypto.cms: asn1crypto
    asn1crypto.core: asn1crypto
    asn1crypto.crl: asn1crypto
    asn1crypto.csr: asn1crypto
    asn1crypto.keys: asn1crypto
    asn1crypto.ocsp: asn1crypto
    asn1crypto.parser: asn1crypto
    asn1crypto.pdf: asn1crypto
    asn1crypto.pem: asn1crypto
    asn1crypto.pkcs12: asn1crypto
    asn1crypto.tsp: asn1crypto
    asn1crypto.util: asn1crypto
    asn1crypto.version: asn1crypto
    asn1crypto.x509: asn1crypto
    astroid: astroid
    astroid.arguments: astroid
    astroid.astroid_manager: astroid
    astroid.bases: astroid
    astroid.brain: astroid
    astroid.brain.brain_argparse: astroid
    astroid.brain.brain_attrs: astroid
    astroid.brain.brain_boto3: astroid
    astroid.brain.brain_builtin_inference: astroid
    astroid.brain.brain_collections: astroid
    astroid.brain.brain_crypt: astroid
    astroid.brain.brain_ctypes: astroid
    astroid.brain.brain_curses: astroid
    astroid.brain.brain_dataclasses: astroid
    astroid.brain.brain_datetime: astroid
    astroid.brain.brain_dateutil: astroid
    astroid.brain.brain_fstrings: astroid
    astroid.brain.brain_functools: astroid
    astroid.brain.brain_gi: astroid
    astroid.brain.brain_hashlib: astroid
    astroid.brain.brain_http: astroid
    astroid.brain.brain_hypothesis: astroid
    astroid.brain.brain_io: astroid
    astroid.brain.brain_mechanize: astroid
    astroid.brain.brain_multiprocessing: astroid
    astroid.brain.brain_namedtuple_enum: astroid
    astroid.brain.brain_nose: astroid
    astroid.brain.brain_numpy_core_einsumfunc: astroid
    astroid.brain.brain_numpy_core_fromnumeric: astroid
    astroid.brain.brain_numpy_core_function_base: astroid
    astroid.brain.brain_numpy_core_multiarray: astroid
    astroid.brain.brain_numpy_core_numeric: astroid
    astroid.brain.brain_numpy_core_numerictypes: astroid
    astroid.brain.brain_numpy_core_umath: astroid
    astroid.brain.brain_numpy_ma: astroid
    astroid.brain.brain_numpy_ndarray: astroid
    astroid.brain.brain_numpy_random_mtrand: astroid
    astroid.brain.brain_numpy_utils: astroid
    astroid.brain.brain_pathlib: astroid
    astroid.brain.brain_pkg_resources: astroid
    astroid.brain.brain_pytest: astroid
    astroid.brain.brain_qt: astroid
    astroid.brain.brain_random: astroid
    astroid.brain.brain_re: astroid
    astroid.brain.brain_regex: astroid
    astroid.brain.brain_responses: astroid
    astroid.brain.brain_scipy_signal: astroid
    astroid.brain.brain_signal: astroid
    astroid.brain.brain_six: astroid
    astroid.brain.brain_sqlalchemy: astroid
    astroid.brain.brain_ssl: astroid
    astroid.brain.brain_subprocess: astroid
    astroid.brain.brain_threading: astroid
    astroid.brain.brain_type: astroid
    astroid.brain.brain_typing: astroid
    astroid.brain.brain_unittest: astroid
    astroid.brain.brain_uuid: astroid
    astroid.brain.helpers: astroid
    astroid.builder: astroid
    astroid.const: astroid
    astroid.constraint: astroid
    astroid.context: astroid
    astroid.decorators: astroid
    astroid.exceptions: astroid
    astroid.filter_statements: astroid
    astroid.helpers: astroid
    astroid.inference_tip: astroid
    astroid.interpreter: astroid
    astroid.interpreter.dunder_lookup: astroid
    astroid.interpreter.objectmodel: astroid
    astroid.manager: astroid
    astroid.modutils: astroid
    astroid.nodes: astroid
    astroid.nodes.as_string: astroid
    astroid.nodes.const: astroid
    astroid.nodes.node_classes: astroid
    astroid.nodes.node_ng: astroid
    astroid.nodes.scoped_nodes: astroid
    astroid.nodes.scoped_nodes.mixin: astroid
    astroid.nodes.scoped_nodes.scoped_nodes: astroid
    astroid.nodes.scoped_nodes.utils: astroid
    astroid.nodes.utils: astroid
    astroid.objects: astroid
    astroid.protocols: astroid
    astroid.raw_building: astroid
    astroid.rebuilder: astroid
    astroid.test_utils: astroid
    astroid.transforms: astroid
    astroid.typing: astroid
    astroid.util: astroid
    black: black
    black.brackets: black
    black.cache: black
    black.comments: black
    black.concurrency: black
    black.const: black
    black.debug: black
    black.files: black
    black.handle_ipynb_magics: black
    black.linegen: black
    black.lines: black
    black.mode: black
    black.nodes: black
    black.numerics: black
    black.output: black
    black.parsing: black
    black.ranges: black
    black.report: black
    black.resources: black
    black.rusty: black
    black.schema: black
    black.strings: black
    black.trans: black
    blackd: black
    blackd.middlewares: black
    blib2to3: black
    blib2to3.pgen2: black
    blib2to3.pgen2.conv: black
    blib2to3.pgen2.driver: black
    blib2to3.pgen2.grammar: black
    blib2to3.pgen2.literals: black
    blib2to3.pgen2.parse: black
    blib2to3.pgen2.pgen: black
    blib2to3.pgen2.token: black
    blib2to3.pgen2.tokenize: black
    blib2to3.pygram: black
    blib2to3.pytree: black
    blinker: blinker
    blinker.base: blinker
    boto3: boto3
    boto3.compat: boto3
    boto3.crt: boto3
    boto3.docs: boto3
    boto3.docs.action: boto3
    boto3.docs.attr: boto3
    boto3.docs.base: boto3
    boto3.docs.client: boto3
    boto3.docs.collection: boto3
    boto3.docs.docstring: boto3
    boto3.docs.method: boto3
    boto3.docs.resource: boto3
    boto3.docs.service: boto3
    boto3.docs.subresource: boto3
    boto3.docs.utils: boto3
    boto3.docs.waiter: boto3
    boto3.dynamodb: boto3
    boto3.dynamodb.conditions: boto3
    boto3.dynamodb.table: boto3
    boto3.dynamodb.transform: boto3
    boto3.dynamodb.types: boto3
    boto3.ec2: boto3
    boto3.ec2.createtags: boto3
    boto3.ec2.deletetags: boto3
    boto3.exceptions: boto3
    boto3.resources: boto3
    boto3.resources.action: boto3
    boto3.resources.base: boto3
    boto3.resources.collection: boto3
    boto3.resources.factory: boto3
    boto3.resources.model: boto3
    boto3.resources.params: boto3
    boto3.resources.response: boto3
    boto3.s3: boto3
    boto3.s3.constants: boto3
    boto3.s3.inject: boto3
    boto3.s3.transfer: boto3
    boto3.session: boto3
    boto3.utils: boto3
    botocore: botocore
    botocore.args: botocore
    botocore.auth: botocore
    botocore.awsrequest: botocore
    botocore.client: botocore
    botocore.compat: botocore
    botocore.compress: botocore
    botocore.config: botocore
    botocore.configloader: botocore
    botocore.configprovider: botocore
    botocore.credentials: botocore
    botocore.crt: botocore
    botocore.crt.auth: botocore
    botocore.discovery: botocore
    botocore.docs: botocore
    botocore.docs.bcdoc: botocore
    botocore.docs.bcdoc.docstringparser: botocore
    botocore.docs.bcdoc.restdoc: botocore
    botocore.docs.bcdoc.style: botocore
    botocore.docs.client: botocore
    botocore.docs.docstring: botocore
    botocore.docs.example: botocore
    botocore.docs.method: botocore
    botocore.docs.paginator: botocore
    botocore.docs.params: botocore
    botocore.docs.service: botocore
    botocore.docs.shape: botocore
    botocore.docs.sharedexample: botocore
    botocore.docs.translator: botocore
    botocore.docs.utils: botocore
    botocore.docs.waiter: botocore
    botocore.endpoint: botocore
    botocore.endpoint_provider: botocore
    botocore.errorfactory: botocore
    botocore.eventstream: botocore
    botocore.exceptions: botocore
    botocore.handlers: botocore
    botocore.history: botocore
    botocore.hooks: botocore
    botocore.httpchecksum: botocore
    botocore.httpsession: botocore
    botocore.loaders: botocore
    botocore.model: botocore
    botocore.monitoring: botocore
    botocore.paginate: botocore
    botocore.parsers: botocore
    botocore.regions: botocore
    botocore.response: botocore
    botocore.retries: botocore
    botocore.retries.adaptive: botocore
    botocore.retries.base: botocore
    botocore.retries.bucket: botocore
    botocore.retries.quota: botocore
    botocore.retries.special: botocore
    botocore.retries.standard: botocore
    botocore.retries.throttling: botocore
    botocore.retryhandler: botocore
    botocore.serialize: botocore
    botocore.session: botocore
    botocore.signers: botocore
    botocore.stub: botocore
    botocore.tokens: botocore
    botocore.translate: botocore
    botocore.useragent: botocore
    botocore.utils: botocore
    botocore.validate: botocore
    botocore.vendored: botocore
    botocore.vendored.requests: botocore
    botocore.vendored.requests.exceptions: botocore
    botocore.vendored.requests.packages: botocore
    botocore.vendored.requests.packages.urllib3: botocore
    botocore.vendored.requests.packages.urllib3.exceptions: botocore
    botocore.vendored.six: botocore
    botocore.waiter: botocore
    certifi: certifi
    certifi.core: certifi
    cfgv: cfgv
    charset_normalizer: charset_normalizer
    charset_normalizer.api: charset_normalizer
    charset_normalizer.cd: charset_normalizer
    charset_normalizer.cli: charset_normalizer
    charset_normalizer.constant: charset_normalizer
    charset_normalizer.legacy: charset_normalizer
    charset_normalizer.md: charset_normalizer
    charset_normalizer.md__mypyc: charset_normalizer
    charset_normalizer.models: charset_normalizer
    charset_normalizer.utils: charset_normalizer
    charset_normalizer.version: charset_normalizer
    click: click
    click.core: click
    click.decorators: click
    click.exceptions: click
    click.formatting: click
    click.globals: click
    click.parser: click
    click.shell_completion: click
    click.termui: click
    click.testing: click
    click.types: click
    click.utils: click
    dateutil: python_dateutil
    dateutil.easter: python_dateutil
    dateutil.parser: python_dateutil
    dateutil.parser.isoparser: python_dateutil
    dateutil.relativedelta: python_dateutil
    dateutil.rrule: python_dateutil
    dateutil.tz: python_dateutil
    dateutil.tz.tz: python_dateutil
    dateutil.tz.win: python_dateutil
    dateutil.tzwin: python_dateutil
    dateutil.utils: python_dateutil
    dateutil.zoneinfo: python_dateutil
    dateutil.zoneinfo.rebuild: python_dateutil
    dill: dill
    dill.detect: dill
    dill.logger: dill
    dill.objtypes: dill
    dill.pointers: dill
    dill.session: dill
    dill.settings: dill
    dill.source: dill
    dill.temp: dill
    dill.tests: dill
    dill.tests.test_abc: dill
    dill.tests.test_check: dill
    dill.tests.test_classdef: dill
    dill.tests.test_dataclasses: dill
    dill.tests.test_detect: dill
    dill.tests.test_dictviews: dill
    dill.tests.test_diff: dill
    dill.tests.test_extendpickle: dill
    dill.tests.test_fglobals: dill
    dill.tests.test_file: dill
    dill.tests.test_functions: dill
    dill.tests.test_functors: dill
    dill.tests.test_logger: dill
    dill.tests.test_mixins: dill
    dill.tests.test_module: dill
    dill.tests.test_moduledict: dill
    dill.tests.test_nested: dill
    dill.tests.test_objects: dill
    dill.tests.test_properties: dill
    dill.tests.test_pycapsule: dill
    dill.tests.test_recursive: dill
    dill.tests.test_registered: dill
    dill.tests.test_restricted: dill
    dill.tests.test_selected: dill
    dill.tests.test_session: dill
    dill.tests.test_source: dill
    dill.tests.test_temp: dill
    dill.tests.test_weakref: dill
    distlib: distlib
    distlib.compat: distlib
    distlib.database: distlib
    distlib.index: distlib
    distlib.locators: distlib
    distlib.manifest: distlib
    distlib.markers: distlib
    distlib.metadata: distlib
    distlib.resources: distlib
    distlib.scripts: distlib
    distlib.util: distlib
    distlib.version: distlib
    distlib.wheel: distlib
    docker: docker
    docker.api: docker
    docker.api.build: docker
    docker.api.client: docker
    docker.api.config: docker
    docker.api.container: docker
    docker.api.daemon: docker
    docker.api.exec_api: docker
    docker.api.image: docker
    docker.api.network: docker
    docker.api.plugin: docker
    docker.api.secret: docker
    docker.api.service: docker
    docker.api.swarm: docker
    docker.api.volume: docker
    docker.auth: docker
    docker.client: docker
    docker.constants: docker
    docker.context: docker
    docker.context.api: docker
    docker.context.config: docker
    docker.context.context: docker
    docker.credentials: docker
    docker.credentials.constants: docker
    docker.credentials.errors: docker
    docker.credentials.store: docker
    docker.credentials.utils: docker
    docker.errors: docker
    docker.models: docker
    docker.models.configs: docker
    docker.models.containers: docker
    docker.models.images: docker
    docker.models.networks: docker
    docker.models.nodes: docker
    docker.models.plugins: docker
    docker.models.resource: docker
    docker.models.secrets: docker
    docker.models.services: docker
    docker.models.swarm: docker
    docker.models.volumes: docker
    docker.tls: docker
    docker.transport: docker
    docker.transport.basehttpadapter: docker
    docker.transport.npipeconn: docker
    docker.transport.npipesocket: docker
    docker.transport.sshconn: docker
    docker.transport.unixconn: docker
    docker.types: docker
    docker.types.base: docker
    docker.types.containers: docker
    docker.types.daemon: docker
    docker.types.healthcheck: docker
    docker.types.networks: docker
    docker.types.services: docker
    docker.types.swarm: docker
    docker.utils: docker
    docker.utils.build: docker
    docker.utils.config: docker
    docker.utils.decorators: docker
    docker.utils.fnmatch: docker
    docker.utils.json_stream: docker
    docker.utils.ports: docker
    docker.utils.proxy: docker
    docker.utils.socket: docker
    docker.utils.utils: docker
    docker.version: docker
    exceptiongroup: exceptiongroup
    filelock: filelock
    filelock.version: filelock
    flask: flask
    flask.app: flask
    flask.blueprints: flask
    flask.cli: flask
    flask.config: flask
    flask.ctx: flask
    flask.debughelpers: flask
    flask.globals: flask
    flask.helpers: flask
    flask.json: flask
    flask.json.provider: flask
    flask.json.tag: flask
    flask.logging: flask
    flask.sansio.app: flask
    flask.sansio.blueprints: flask
    flask.sansio.scaffold: flask
    flask.sessions: flask
    flask.signals: flask
    flask.templating: flask
    flask.testing: flask
    flask.typing: flask
    flask.views: flask
    flask.wrappers: flask
    flask_cors: Flask_Cors
    flask_cors.core: Flask_Cors
    flask_cors.decorator: Flask_Cors
    flask_cors.extension: Flask_Cors
    flask_cors.version: Flask_Cors
    flask_migrate: Flask_Migrate
    flask_migrate.cli: Flask_Migrate
    flask_migrate.templates.aioflask-multidb.env: Flask_Migrate
    flask_migrate.templates.aioflask.env: Flask_Migrate
    flask_migrate.templates.flask-multidb.env: Flask_Migrate
    flask_migrate.templates.flask.env: Flask_Migrate
    flask_sqlalchemy: flask_sqlalchemy
    flask_sqlalchemy.cli: flask_sqlalchemy
    flask_sqlalchemy.extension: flask_sqlalchemy
    flask_sqlalchemy.model: flask_sqlalchemy
    flask_sqlalchemy.pagination: flask_sqlalchemy
    flask_sqlalchemy.query: flask_sqlalchemy
    flask_sqlalchemy.record_queries: flask_sqlalchemy
    flask_sqlalchemy.session: flask_sqlalchemy
    flask_sqlalchemy.table: flask_sqlalchemy
    flask_sqlalchemy.track_modifications: flask_sqlalchemy
    google.protobuf: protobuf
    google.protobuf.any_pb2: protobuf
    google.protobuf.api_pb2: protobuf
    google.protobuf.compiler: protobuf
    google.protobuf.compiler.plugin_pb2: protobuf
    google.protobuf.descriptor: protobuf
    google.protobuf.descriptor_database: protobuf
    google.protobuf.descriptor_pb2: protobuf
    google.protobuf.descriptor_pool: protobuf
    google.protobuf.duration_pb2: protobuf
    google.protobuf.empty_pb2: protobuf
    google.protobuf.field_mask_pb2: protobuf
    google.protobuf.internal: protobuf
    google.protobuf.internal.api_implementation: protobuf
    google.protobuf.internal.builder: protobuf
    google.protobuf.internal.containers: protobuf
    google.protobuf.internal.decoder: protobuf
    google.protobuf.internal.encoder: protobuf
    google.protobuf.internal.enum_type_wrapper: protobuf
    google.protobuf.internal.extension_dict: protobuf
    google.protobuf.internal.field_mask: protobuf
    google.protobuf.internal.message_listener: protobuf
    google.protobuf.internal.python_edition_defaults: protobuf
    google.protobuf.internal.python_message: protobuf
    google.protobuf.internal.testing_refleaks: protobuf
    google.protobuf.internal.type_checkers: protobuf
    google.protobuf.internal.well_known_types: protobuf
    google.protobuf.internal.wire_format: protobuf
    google.protobuf.json_format: protobuf
    google.protobuf.message: protobuf
    google.protobuf.message_factory: protobuf
    google.protobuf.proto_builder: protobuf
    google.protobuf.pyext: protobuf
    google.protobuf.pyext.cpp_message: protobuf
    google.protobuf.reflection: protobuf
    google.protobuf.runtime_version: protobuf
    google.protobuf.service: protobuf
    google.protobuf.service_reflection: protobuf
    google.protobuf.source_context_pb2: protobuf
    google.protobuf.struct_pb2: protobuf
    google.protobuf.symbol_database: protobuf
    google.protobuf.testdata: protobuf
    google.protobuf.text_encoding: protobuf
    google.protobuf.text_format: protobuf
    google.protobuf.timestamp_pb2: protobuf
    google.protobuf.type_pb2: protobuf
    google.protobuf.unknown_fields: protobuf
    google.protobuf.util: protobuf
    google.protobuf.wrappers_pb2: protobuf
    graphql: graphql_core
    graphql.error: graphql_core
    graphql.error.graphql_error: graphql_core
    graphql.error.located_error: graphql_core
    graphql.error.syntax_error: graphql_core
    graphql.execution: graphql_core
    graphql.execution.collect_fields: graphql_core
    graphql.execution.execute: graphql_core
    graphql.execution.map_async_iterator: graphql_core
    graphql.execution.middleware: graphql_core
    graphql.execution.subscribe: graphql_core
    graphql.execution.values: graphql_core
    graphql.graphql: graphql_core
    graphql.language: graphql_core
    graphql.language.ast: graphql_core
    graphql.language.block_string: graphql_core
    graphql.language.character_classes: graphql_core
    graphql.language.directive_locations: graphql_core
    graphql.language.lexer: graphql_core
    graphql.language.location: graphql_core
    graphql.language.parser: graphql_core
    graphql.language.predicates: graphql_core
    graphql.language.print_location: graphql_core
    graphql.language.print_string: graphql_core
    graphql.language.printer: graphql_core
    graphql.language.source: graphql_core
    graphql.language.token_kind: graphql_core
    graphql.language.visitor: graphql_core
    graphql.pyutils: graphql_core
    graphql.pyutils.awaitable_or_value: graphql_core
    graphql.pyutils.cached_property: graphql_core
    graphql.pyutils.convert_case: graphql_core
    graphql.pyutils.description: graphql_core
    graphql.pyutils.did_you_mean: graphql_core
    graphql.pyutils.frozen_dict: graphql_core
    graphql.pyutils.frozen_error: graphql_core
    graphql.pyutils.frozen_list: graphql_core
    graphql.pyutils.group_by: graphql_core
    graphql.pyutils.identity_func: graphql_core
    graphql.pyutils.inspect: graphql_core
    graphql.pyutils.is_awaitable: graphql_core
    graphql.pyutils.is_iterable: graphql_core
    graphql.pyutils.merge_kwargs: graphql_core
    graphql.pyutils.natural_compare: graphql_core
    graphql.pyutils.path: graphql_core
    graphql.pyutils.print_path_list: graphql_core
    graphql.pyutils.simple_pub_sub: graphql_core
    graphql.pyutils.suggestion_list: graphql_core
    graphql.pyutils.undefined: graphql_core
    graphql.subscription: graphql_core
    graphql.type: graphql_core
    graphql.type.assert_name: graphql_core
    graphql.type.definition: graphql_core
    graphql.type.directives: graphql_core
    graphql.type.introspection: graphql_core
    graphql.type.scalars: graphql_core
    graphql.type.schema: graphql_core
    graphql.type.validate: graphql_core
    graphql.utilities: graphql_core
    graphql.utilities.assert_valid_name: graphql_core
    graphql.utilities.ast_from_value: graphql_core
    graphql.utilities.ast_to_dict: graphql_core
    graphql.utilities.build_ast_schema: graphql_core
    graphql.utilities.build_client_schema: graphql_core
    graphql.utilities.coerce_input_value: graphql_core
    graphql.utilities.concat_ast: graphql_core
    graphql.utilities.extend_schema: graphql_core
    graphql.utilities.find_breaking_changes: graphql_core
    graphql.utilities.get_introspection_query: graphql_core
    graphql.utilities.get_operation_ast: graphql_core
    graphql.utilities.get_operation_root_type: graphql_core
    graphql.utilities.introspection_from_schema: graphql_core
    graphql.utilities.lexicographic_sort_schema: graphql_core
    graphql.utilities.print_schema: graphql_core
    graphql.utilities.separate_operations: graphql_core
    graphql.utilities.sort_value_node: graphql_core
    graphql.utilities.strip_ignored_characters: graphql_core
    graphql.utilities.type_comparators: graphql_core
    graphql.utilities.type_from_ast: graphql_core
    graphql.utilities.type_info: graphql_core
    graphql.utilities.value_from_ast: graphql_core
    graphql.utilities.value_from_ast_untyped: graphql_core
    graphql.validation: graphql_core
    graphql.validation.rules: graphql_core
    graphql.validation.rules.custom: graphql_core
    graphql.validation.rules.custom.no_deprecated: graphql_core
    graphql.validation.rules.custom.no_schema_introspection: graphql_core
    graphql.validation.rules.executable_definitions: graphql_core
    graphql.validation.rules.fields_on_correct_type: graphql_core
    graphql.validation.rules.fragments_on_composite_types: graphql_core
    graphql.validation.rules.known_argument_names: graphql_core
    graphql.validation.rules.known_directives: graphql_core
    graphql.validation.rules.known_fragment_names: graphql_core
    graphql.validation.rules.known_type_names: graphql_core
    graphql.validation.rules.lone_anonymous_operation: graphql_core
    graphql.validation.rules.lone_schema_definition: graphql_core
    graphql.validation.rules.no_fragment_cycles: graphql_core
    graphql.validation.rules.no_undefined_variables: graphql_core
    graphql.validation.rules.no_unused_fragments: graphql_core
    graphql.validation.rules.no_unused_variables: graphql_core
    graphql.validation.rules.overlapping_fields_can_be_merged: graphql_core
    graphql.validation.rules.possible_fragment_spreads: graphql_core
    graphql.validation.rules.possible_type_extensions: graphql_core
    graphql.validation.rules.provided_required_arguments: graphql_core
    graphql.validation.rules.scalar_leafs: graphql_core
    graphql.validation.rules.single_field_subscriptions: graphql_core
    graphql.validation.rules.unique_argument_definition_names: graphql_core
    graphql.validation.rules.unique_argument_names: graphql_core
    graphql.validation.rules.unique_directive_names: graphql_core
    graphql.validation.rules.unique_directives_per_location: graphql_core
    graphql.validation.rules.unique_enum_value_names: graphql_core
    graphql.validation.rules.unique_field_definition_names: graphql_core
    graphql.validation.rules.unique_fragment_names: graphql_core
    graphql.validation.rules.unique_input_field_names: graphql_core
    graphql.validation.rules.unique_operation_names: graphql_core
    graphql.validation.rules.unique_operation_types: graphql_core
    graphql.validation.rules.unique_type_names: graphql_core
    graphql.validation.rules.unique_variable_names: graphql_core
    graphql.validation.rules.values_of_correct_type: graphql_core
    graphql.validation.rules.variables_are_input_types: graphql_core
    graphql.validation.rules.variables_in_allowed_position: graphql_core
    graphql.validation.specified_rules: graphql_core
    graphql.validation.validate: graphql_core
    graphql.validation.validation_context: graphql_core
    graphql.version: graphql_core
    graphql_server: graphql_server
    graphql_server.aiohttp: graphql_server
    graphql_server.aiohttp.graphqlview: graphql_server
    graphql_server.error: graphql_server
    graphql_server.flask: graphql_server
    graphql_server.flask.graphqlview: graphql_server
    graphql_server.quart: graphql_server
    graphql_server.quart.graphqlview: graphql_server
    graphql_server.render_graphiql: graphql_server
    graphql_server.sanic: graphql_server
    graphql_server.sanic.graphqlview: graphql_server
    graphql_server.utils: graphql_server
    graphql_server.version: graphql_server
    graphql_server.webob: graphql_server
    graphql_server.webob.graphqlview: graphql_server
    greenlet: greenlet
    greenlet.platform: greenlet
    greenlet.tests: greenlet
    greenlet.tests.fail_clearing_run_switches: greenlet
    greenlet.tests.fail_cpp_exception: greenlet
    greenlet.tests.fail_initialstub_already_started: greenlet
    greenlet.tests.fail_slp_switch: greenlet
    greenlet.tests.fail_switch_three_greenlets: greenlet
    greenlet.tests.fail_switch_three_greenlets2: greenlet
    greenlet.tests.fail_switch_two_greenlets: greenlet
    greenlet.tests.leakcheck: greenlet
    greenlet.tests.test_contextvars: greenlet
    greenlet.tests.test_cpp: greenlet
    greenlet.tests.test_extension_interface: greenlet
    greenlet.tests.test_gc: greenlet
    greenlet.tests.test_generator: greenlet
    greenlet.tests.test_generator_nested: greenlet
    greenlet.tests.test_greenlet: greenlet
    greenlet.tests.test_greenlet_trash: greenlet
    greenlet.tests.test_leaks: greenlet
    greenlet.tests.test_stack_saved: greenlet
    greenlet.tests.test_throw: greenlet
    greenlet.tests.test_tracing: greenlet
    greenlet.tests.test_version: greenlet
    greenlet.tests.test_weakref: greenlet
    identify: identify
    identify.cli: identify
    identify.extensions: identify
    identify.identify: identify
    identify.interpreters: identify
    identify.vendor: identify
    identify.vendor.licenses: identify
    idna: idna
    idna.codec: idna
    idna.compat: idna
    idna.core: idna
    idna.idnadata: idna
    idna.intranges: idna
    idna.package_data: idna
    idna.uts46data: idna
    importlib_metadata: importlib_metadata
    importlib_metadata.compat: importlib_metadata
    importlib_metadata.compat.py311: importlib_metadata
    importlib_metadata.compat.py39: importlib_metadata
    importlib_metadata.diagnose: importlib_metadata
    importlib_resources: importlib_resources
    importlib_resources.abc: importlib_resources
    importlib_resources.compat: importlib_resources
    importlib_resources.compat.py38: importlib_resources
    importlib_resources.compat.py39: importlib_resources
    importlib_resources.functional: importlib_resources
    importlib_resources.future: importlib_resources
    importlib_resources.future.adapters: importlib_resources
    importlib_resources.readers: importlib_resources
    importlib_resources.simple: importlib_resources
    importlib_resources.tests: importlib_resources
    importlib_resources.tests.compat: importlib_resources
    importlib_resources.tests.compat.py312: importlib_resources
    importlib_resources.tests.compat.py39: importlib_resources
    importlib_resources.tests.data01: importlib_resources
    importlib_resources.tests.data01.subdirectory: importlib_resources
    importlib_resources.tests.data02: importlib_resources
    importlib_resources.tests.data02.one: importlib_resources
    importlib_resources.tests.data02.two: importlib_resources
    importlib_resources.tests.test_compatibilty_files: importlib_resources
    importlib_resources.tests.test_contents: importlib_resources
    importlib_resources.tests.test_custom: importlib_resources
    importlib_resources.tests.test_files: importlib_resources
    importlib_resources.tests.test_functional: importlib_resources
    importlib_resources.tests.test_open: importlib_resources
    importlib_resources.tests.test_path: importlib_resources
    importlib_resources.tests.test_read: importlib_resources
    importlib_resources.tests.test_reader: importlib_resources
    importlib_resources.tests.test_resource: importlib_resources
    importlib_resources.tests.util: importlib_resources
    importlib_resources.tests.zip: importlib_resources
    iniconfig: iniconfig
    iniconfig.exceptions: iniconfig
    isort: isort
    isort.api: isort
    isort.comments: isort
    isort.core: isort
    isort.deprecated: isort
    isort.deprecated.finders: isort
    isort.exceptions: isort
    isort.files: isort
    isort.format: isort
    isort.hooks: isort
    isort.identify: isort
    isort.io: isort
    isort.literal: isort
    isort.logo: isort
    isort.main: isort
    isort.output: isort
    isort.parse: isort
    isort.place: isort
    isort.profiles: isort
    isort.pylama_isort: isort
    isort.sections: isort
    isort.settings: isort
    isort.setuptools_commands: isort
    isort.sorting: isort
    isort.stdlibs: isort
    isort.stdlibs.all: isort
    isort.stdlibs.py2: isort
    isort.stdlibs.py27: isort
    isort.stdlibs.py3: isort
    isort.stdlibs.py310: isort
    isort.stdlibs.py311: isort
    isort.stdlibs.py312: isort
    isort.stdlibs.py36: isort
    isort.stdlibs.py37: isort
    isort.stdlibs.py38: isort
    isort.stdlibs.py39: isort
    isort.utils: isort
    isort.wrap: isort
    isort.wrap_modes: isort
    itsdangerous: itsdangerous
    itsdangerous.encoding: itsdangerous
    itsdangerous.exc: itsdangerous
    itsdangerous.serializer: itsdangerous
    itsdangerous.signer: itsdangerous
    itsdangerous.timed: itsdangerous
    itsdangerous.url_safe: itsdangerous
    jinja2: jinja2
    jinja2.async_utils: jinja2
    jinja2.bccache: jinja2
    jinja2.compiler: jinja2
    jinja2.constants: jinja2
    jinja2.debug: jinja2
    jinja2.defaults: jinja2
    jinja2.environment: jinja2
    jinja2.exceptions: jinja2
    jinja2.ext: jinja2
    jinja2.filters: jinja2
    jinja2.idtracking: jinja2
    jinja2.lexer: jinja2
    jinja2.loaders: jinja2
    jinja2.meta: jinja2
    jinja2.nativetypes: jinja2
    jinja2.nodes: jinja2
    jinja2.optimizer: jinja2
    jinja2.parser: jinja2
    jinja2.runtime: jinja2
    jinja2.sandbox: jinja2
    jinja2.tests: jinja2
    jinja2.utils: jinja2
    jinja2.visitor: jinja2
    jmespath: jmespath
    jmespath.ast: jmespath
    jmespath.compat: jmespath
    jmespath.exceptions: jmespath
    jmespath.functions: jmespath
    jmespath.lexer: jmespath
    jmespath.parser: jmespath
    jmespath.visitor: jmespath
    lazy_object_proxy: lazy_object_proxy
    lazy_object_proxy.cext: lazy_object_proxy
    lazy_object_proxy.compat: lazy_object_proxy
    lazy_object_proxy.simple: lazy_object_proxy
    lazy_object_proxy.slots: lazy_object_proxy
    lazy_object_proxy.utils: lazy_object_proxy
    mako: Mako
    mako.ast: Mako
    mako.cache: Mako
    mako.cmd: Mako
    mako.codegen: Mako
    mako.compat: Mako
    mako.exceptions: Mako
    mako.ext: Mako
    mako.ext.autohandler: Mako
    mako.ext.babelplugin: Mako
    mako.ext.beaker_cache: Mako
    mako.ext.extract: Mako
    mako.ext.linguaplugin: Mako
    mako.ext.preprocessors: Mako
    mako.ext.pygmentplugin: Mako
    mako.ext.turbogears: Mako
    mako.filters: Mako
    mako.lexer: Mako
    mako.lookup: Mako
    mako.parsetree: Mako
    mako.pygen: Mako
    mako.pyparser: Mako
    mako.runtime: Mako
    mako.template: Mako
    mako.testing: Mako
    mako.testing.assertions: Mako
    mako.testing.config: Mako
    mako.testing.exclusions: Mako
    mako.testing.fixtures: Mako
    mako.testing.helpers: Mako
    mako.util: Mako
    markupsafe: MarkupSafe
    mccabe: mccabe
    mypy: mypy
    mypy.api: mypy
    mypy.applytype: mypy
    mypy.argmap: mypy
    mypy.binder: mypy
    mypy.bogus_type: mypy
    mypy.build: mypy
    mypy.checker: mypy
    mypy.checkexpr: mypy
    mypy.checkmember: mypy
    mypy.checkpattern: mypy
    mypy.checkstrformat: mypy
    mypy.config_parser: mypy
    mypy.constant_fold: mypy
    mypy.constraints: mypy
    mypy.copytype: mypy
    mypy.defaults: mypy
    mypy.dmypy: mypy
    mypy.dmypy.client: mypy
    mypy.dmypy_os: mypy
    mypy.dmypy_server: mypy
    mypy.dmypy_util: mypy
    mypy.erasetype: mypy
    mypy.errorcodes: mypy
    mypy.errors: mypy
    mypy.evalexpr: mypy
    mypy.expandtype: mypy
    mypy.exprtotype: mypy
    mypy.fastparse: mypy
    mypy.find_sources: mypy
    mypy.fixup: mypy
    mypy.freetree: mypy
    mypy.fscache: mypy
    mypy.fswatcher: mypy
    mypy.gclogger: mypy
    mypy.git: mypy
    mypy.graph_utils: mypy
    mypy.indirection: mypy
    mypy.infer: mypy
    mypy.inspections: mypy
    mypy.ipc: mypy
    mypy.join: mypy
    mypy.literals: mypy
    mypy.lookup: mypy
    mypy.main: mypy
    mypy.maptype: mypy
    mypy.meet: mypy
    mypy.memprofile: mypy
    mypy.message_registry: mypy
    mypy.messages: mypy
    mypy.metastore: mypy
    mypy.mixedtraverser: mypy
    mypy.modulefinder: mypy
    mypy.moduleinspect: mypy
    mypy.mro: mypy
    mypy.nodes: mypy
    mypy.operators: mypy
    mypy.options: mypy
    mypy.parse: mypy
    mypy.partially_defined: mypy
    mypy.patterns: mypy
    mypy.plugin: mypy
    mypy.plugins: mypy
    mypy.plugins.attrs: mypy
    mypy.plugins.common: mypy
    mypy.plugins.ctypes: mypy
    mypy.plugins.dataclasses: mypy
    mypy.plugins.default: mypy
    mypy.plugins.enums: mypy
    mypy.plugins.functools: mypy
    mypy.plugins.proper_plugin: mypy
    mypy.plugins.singledispatch: mypy
    mypy.pyinfo: mypy
    mypy.reachability: mypy
    mypy.refinfo: mypy
    mypy.renaming: mypy
    mypy.report: mypy
    mypy.scope: mypy
    mypy.semanal: mypy
    mypy.semanal_classprop: mypy
    mypy.semanal_enum: mypy
    mypy.semanal_infer: mypy
    mypy.semanal_main: mypy
    mypy.semanal_namedtuple: mypy
    mypy.semanal_newtype: mypy
    mypy.semanal_pass1: mypy
    mypy.semanal_shared: mypy
    mypy.semanal_typeargs: mypy
    mypy.semanal_typeddict: mypy
    mypy.server: mypy
    mypy.server.astdiff: mypy
    mypy.server.astmerge: mypy
    mypy.server.aststrip: mypy
    mypy.server.deps: mypy
    mypy.server.mergecheck: mypy
    mypy.server.objgraph: mypy
    mypy.server.subexpr: mypy
    mypy.server.target: mypy
    mypy.server.trigger: mypy
    mypy.server.update: mypy
    mypy.sharedparse: mypy
    mypy.solve: mypy
    mypy.split_namespace: mypy
    mypy.state: mypy
    mypy.stats: mypy
    mypy.strconv: mypy
    mypy.stubdoc: mypy
    mypy.stubgen: mypy
    mypy.stubgenc: mypy
    mypy.stubinfo: mypy
    mypy.stubtest: mypy
    mypy.stubutil: mypy
    mypy.subtypes: mypy
    mypy.suggestions: mypy
    mypy.test: mypy
    mypy.test.config: mypy
    mypy.test.data: mypy
    mypy.test.helpers: mypy
    mypy.test.meta: mypy
    mypy.test.meta.test_diff_helper: mypy
    mypy.test.meta.test_parse_data: mypy
    mypy.test.meta.test_update_data: mypy
    mypy.test.test_find_sources: mypy
    mypy.test.test_ref_info: mypy
    mypy.test.testapi: mypy
    mypy.test.testargs: mypy
    mypy.test.testcheck: mypy
    mypy.test.testcmdline: mypy
    mypy.test.testconstraints: mypy
    mypy.test.testdaemon: mypy
    mypy.test.testdeps: mypy
    mypy.test.testdiff: mypy
    mypy.test.testerrorstream: mypy
    mypy.test.testfinegrained: mypy
    mypy.test.testfinegrainedcache: mypy
    mypy.test.testformatter: mypy
    mypy.test.testfscache: mypy
    mypy.test.testgraph: mypy
    mypy.test.testinfer: mypy
    mypy.test.testipc: mypy
    mypy.test.testmerge: mypy
    mypy.test.testmodulefinder: mypy
    mypy.test.testmypyc: mypy
    mypy.test.testparse: mypy
    mypy.test.testpep561: mypy
    mypy.test.testpythoneval: mypy
    mypy.test.testreports: mypy
    mypy.test.testsemanal: mypy
    mypy.test.testsolve: mypy
    mypy.test.teststubgen: mypy
    mypy.test.teststubinfo: mypy
    mypy.test.teststubtest: mypy
    mypy.test.testsubtypes: mypy
    mypy.test.testtransform: mypy
    mypy.test.testtypegen: mypy
    mypy.test.testtypes: mypy
    mypy.test.testutil: mypy
    mypy.test.typefixture: mypy
    mypy.test.update_data: mypy
    mypy.test.visitors: mypy
    mypy.traverser: mypy
    mypy.treetransform: mypy
    mypy.tvar_scope: mypy
    mypy.type_visitor: mypy
    mypy.typeanal: mypy
    mypy.typeops: mypy
    mypy.types: mypy
    mypy.types_utils: mypy
    mypy.typestate: mypy
    mypy.typetraverser: mypy
    mypy.typevars: mypy
    mypy.typevartuples: mypy
    mypy.util: mypy
    mypy.version: mypy
    mypy.visitor: mypy
    mypy_extensions: mypy_extensions
    mypyc: mypy
    mypyc.analysis: mypy
    mypyc.analysis.attrdefined: mypy
    mypyc.analysis.blockfreq: mypy
    mypyc.analysis.dataflow: mypy
    mypyc.analysis.ircheck: mypy
    mypyc.analysis.selfleaks: mypy
    mypyc.build: mypy
    mypyc.codegen: mypy
    mypyc.codegen.cstring: mypy
    mypyc.codegen.emit: mypy
    mypyc.codegen.emitclass: mypy
    mypyc.codegen.emitfunc: mypy
    mypyc.codegen.emitmodule: mypy
    mypyc.codegen.emitwrapper: mypy
    mypyc.codegen.literals: mypy
    mypyc.common: mypy
    mypyc.crash: mypy
    mypyc.doc.conf: mypy
    mypyc.errors: mypy
    mypyc.ir: mypy
    mypyc.ir.class_ir: mypy
    mypyc.ir.func_ir: mypy
    mypyc.ir.module_ir: mypy
    mypyc.ir.ops: mypy
    mypyc.ir.pprint: mypy
    mypyc.ir.rtypes: mypy
    mypyc.irbuild: mypy
    mypyc.irbuild.ast_helpers: mypy
    mypyc.irbuild.builder: mypy
    mypyc.irbuild.callable_class: mypy
    mypyc.irbuild.classdef: mypy
    mypyc.irbuild.constant_fold: mypy
    mypyc.irbuild.context: mypy
    mypyc.irbuild.env_class: mypy
    mypyc.irbuild.expression: mypy
    mypyc.irbuild.for_helpers: mypy
    mypyc.irbuild.format_str_tokenizer: mypy
    mypyc.irbuild.function: mypy
    mypyc.irbuild.generator: mypy
    mypyc.irbuild.ll_builder: mypy
    mypyc.irbuild.main: mypy
    mypyc.irbuild.mapper: mypy
    mypyc.irbuild.match: mypy
    mypyc.irbuild.nonlocalcontrol: mypy
    mypyc.irbuild.prebuildvisitor: mypy
    mypyc.irbuild.prepare: mypy
    mypyc.irbuild.specialize: mypy
    mypyc.irbuild.statement: mypy
    mypyc.irbuild.targets: mypy
    mypyc.irbuild.util: mypy
    mypyc.irbuild.visitor: mypy
    mypyc.irbuild.vtable: mypy
    mypyc.lib-rt.setup: mypy
    mypyc.lower: mypy
    mypyc.lower.int_ops: mypy
    mypyc.lower.list_ops: mypy
    mypyc.lower.misc_ops: mypy
    mypyc.lower.registry: mypy
    mypyc.namegen: mypy
    mypyc.options: mypy
    mypyc.primitives: mypy
    mypyc.primitives.bytes_ops: mypy
    mypyc.primitives.dict_ops: mypy
    mypyc.primitives.exc_ops: mypy
    mypyc.primitives.float_ops: mypy
    mypyc.primitives.generic_ops: mypy
    mypyc.primitives.int_ops: mypy
    mypyc.primitives.list_ops: mypy
    mypyc.primitives.misc_ops: mypy
    mypyc.primitives.registry: mypy
    mypyc.primitives.set_ops: mypy
    mypyc.primitives.str_ops: mypy
    mypyc.primitives.tuple_ops: mypy
    mypyc.rt_subtype: mypy
    mypyc.sametype: mypy
    mypyc.subtype: mypy
    mypyc.test: mypy
    mypyc.test-data.driver.driver: mypy
    mypyc.test-data.fixtures.ir: mypy
    mypyc.test-data.fixtures.testutil: mypy
    mypyc.test.config: mypy
    mypyc.test.test_alwaysdefined: mypy
    mypyc.test.test_analysis: mypy
    mypyc.test.test_cheader: mypy
    mypyc.test.test_commandline: mypy
    mypyc.test.test_emit: mypy
    mypyc.test.test_emitclass: mypy
    mypyc.test.test_emitfunc: mypy
    mypyc.test.test_emitwrapper: mypy
    mypyc.test.test_exceptions: mypy
    mypyc.test.test_external: mypy
    mypyc.test.test_irbuild: mypy
    mypyc.test.test_ircheck: mypy
    mypyc.test.test_literals: mypy
    mypyc.test.test_lowering: mypy
    mypyc.test.test_namegen: mypy
    mypyc.test.test_optimizations: mypy
    mypyc.test.test_pprint: mypy
    mypyc.test.test_rarray: mypy
    mypyc.test.test_refcount: mypy
    mypyc.test.test_run: mypy
    mypyc.test.test_serialization: mypy
    mypyc.test.test_struct: mypy
    mypyc.test.test_tuplename: mypy
    mypyc.test.test_typeops: mypy
    mypyc.test.testutil: mypy
    mypyc.transform: mypy
    mypyc.transform.copy_propagation: mypy
    mypyc.transform.exceptions: mypy
    mypyc.transform.flag_elimination: mypy
    mypyc.transform.ir_transform: mypy
    mypyc.transform.lower: mypy
    mypyc.transform.refcount: mypy
    mypyc.transform.uninit: mypy
    nodeenv: nodeenv
    packaging: packaging
    packaging.markers: packaging
    packaging.metadata: packaging
    packaging.requirements: packaging
    packaging.specifiers: packaging
    packaging.tags: packaging
    packaging.utils: packaging
    packaging.version: packaging
    pathspec: pathspec
    pathspec.gitignore: pathspec
    pathspec.pathspec: pathspec
    pathspec.pattern: pathspec
    pathspec.patterns: pathspec
    pathspec.patterns.gitwildmatch: pathspec
    pathspec.util: pathspec
    pg8000: pg8000
    pg8000.converters: pg8000
    pg8000.core: pg8000
    pg8000.dbapi: pg8000
    pg8000.exceptions: pg8000
    pg8000.legacy: pg8000
    pg8000.native: pg8000
    pg8000.types: pg8000
    platformdirs: platformdirs
    platformdirs.android: platformdirs
    platformdirs.api: platformdirs
    platformdirs.macos: platformdirs
    platformdirs.unix: platformdirs
    platformdirs.version: platformdirs
    platformdirs.windows: platformdirs
    pluggy: pluggy
    pre_commit: pre_commit
    pre_commit.all_languages: pre_commit
    pre_commit.clientlib: pre_commit
    pre_commit.color: pre_commit
    pre_commit.commands: pre_commit
    pre_commit.commands.autoupdate: pre_commit
    pre_commit.commands.clean: pre_commit
    pre_commit.commands.gc: pre_commit
    pre_commit.commands.hook_impl: pre_commit
    pre_commit.commands.init_templatedir: pre_commit
    pre_commit.commands.install_uninstall: pre_commit
    pre_commit.commands.migrate_config: pre_commit
    pre_commit.commands.run: pre_commit
    pre_commit.commands.sample_config: pre_commit
    pre_commit.commands.try_repo: pre_commit
    pre_commit.commands.validate_config: pre_commit
    pre_commit.commands.validate_manifest: pre_commit
    pre_commit.constants: pre_commit
    pre_commit.envcontext: pre_commit
    pre_commit.error_handler: pre_commit
    pre_commit.errors: pre_commit
    pre_commit.file_lock: pre_commit
    pre_commit.git: pre_commit
    pre_commit.hook: pre_commit
    pre_commit.lang_base: pre_commit
    pre_commit.languages: pre_commit
    pre_commit.languages.conda: pre_commit
    pre_commit.languages.coursier: pre_commit
    pre_commit.languages.dart: pre_commit
    pre_commit.languages.docker: pre_commit
    pre_commit.languages.docker_image: pre_commit
    pre_commit.languages.dotnet: pre_commit
    pre_commit.languages.fail: pre_commit
    pre_commit.languages.golang: pre_commit
    pre_commit.languages.haskell: pre_commit
    pre_commit.languages.lua: pre_commit
    pre_commit.languages.node: pre_commit
    pre_commit.languages.perl: pre_commit
    pre_commit.languages.pygrep: pre_commit
    pre_commit.languages.python: pre_commit
    pre_commit.languages.r: pre_commit
    pre_commit.languages.ruby: pre_commit
    pre_commit.languages.rust: pre_commit
    pre_commit.languages.script: pre_commit
    pre_commit.languages.swift: pre_commit
    pre_commit.languages.system: pre_commit
    pre_commit.logging_handler: pre_commit
    pre_commit.main: pre_commit
    pre_commit.meta_hooks: pre_commit
    pre_commit.meta_hooks.check_hooks_apply: pre_commit
    pre_commit.meta_hooks.check_useless_excludes: pre_commit
    pre_commit.meta_hooks.identity: pre_commit
    pre_commit.output: pre_commit
    pre_commit.parse_shebang: pre_commit
    pre_commit.prefix: pre_commit
    pre_commit.repository: pre_commit
    pre_commit.resources: pre_commit
    pre_commit.resources.empty_template_setup: pre_commit
    pre_commit.staged_files_only: pre_commit
    pre_commit.store: pre_commit
    pre_commit.util: pre_commit
    pre_commit.xargs: pre_commit
    pre_commit.yaml: pre_commit
    py: pytest
    pylint: pylint
    pylint.checkers: pylint
    pylint.checkers.async: pylint
    pylint.checkers.bad_chained_comparison: pylint
    pylint.checkers.base: pylint
    pylint.checkers.base.basic_checker: pylint
    pylint.checkers.base.basic_error_checker: pylint
    pylint.checkers.base.comparison_checker: pylint
    pylint.checkers.base.docstring_checker: pylint
    pylint.checkers.base.function_checker: pylint
    pylint.checkers.base.name_checker: pylint
    pylint.checkers.base.name_checker.checker: pylint
    pylint.checkers.base.name_checker.naming_style: pylint
    pylint.checkers.base.pass_checker: pylint
    pylint.checkers.base_checker: pylint
    pylint.checkers.classes: pylint
    pylint.checkers.classes.class_checker: pylint
    pylint.checkers.classes.special_methods_checker: pylint
    pylint.checkers.dataclass_checker: pylint
    pylint.checkers.deprecated: pylint
    pylint.checkers.design_analysis: pylint
    pylint.checkers.dunder_methods: pylint
    pylint.checkers.ellipsis_checker: pylint
    pylint.checkers.exceptions: pylint
    pylint.checkers.format: pylint
    pylint.checkers.imports: pylint
    pylint.checkers.lambda_expressions: pylint
    pylint.checkers.logging: pylint
    pylint.checkers.method_args: pylint
    pylint.checkers.misc: pylint
    pylint.checkers.modified_iterating_checker: pylint
    pylint.checkers.nested_min_max: pylint
    pylint.checkers.newstyle: pylint
    pylint.checkers.non_ascii_names: pylint
    pylint.checkers.raw_metrics: pylint
    pylint.checkers.refactoring: pylint
    pylint.checkers.refactoring.implicit_booleaness_checker: pylint
    pylint.checkers.refactoring.not_checker: pylint
    pylint.checkers.refactoring.recommendation_checker: pylint
    pylint.checkers.refactoring.refactoring_checker: pylint
    pylint.checkers.similar: pylint
    pylint.checkers.spelling: pylint
    pylint.checkers.stdlib: pylint
    pylint.checkers.strings: pylint
    pylint.checkers.threading_checker: pylint
    pylint.checkers.typecheck: pylint
    pylint.checkers.unicode: pylint
    pylint.checkers.unsupported_version: pylint
    pylint.checkers.utils: pylint
    pylint.checkers.variables: pylint
    pylint.config: pylint
    pylint.config.argument: pylint
    pylint.config.arguments_manager: pylint
    pylint.config.arguments_provider: pylint
    pylint.config.callback_actions: pylint
    pylint.config.config_file_parser: pylint
    pylint.config.config_initialization: pylint
    pylint.config.deprecation_actions: pylint
    pylint.config.exceptions: pylint
    pylint.config.find_default_config_files: pylint
    pylint.config.help_formatter: pylint
    pylint.config.utils: pylint
    pylint.constants: pylint
    pylint.exceptions: pylint
    pylint.extensions: pylint
    pylint.extensions.bad_builtin: pylint
    pylint.extensions.broad_try_clause: pylint
    pylint.extensions.check_elif: pylint
    pylint.extensions.code_style: pylint
    pylint.extensions.comparison_placement: pylint
    pylint.extensions.confusing_elif: pylint
    pylint.extensions.consider_refactoring_into_while_condition: pylint
    pylint.extensions.consider_ternary_expression: pylint
    pylint.extensions.dict_init_mutate: pylint
    pylint.extensions.docparams: pylint
    pylint.extensions.docstyle: pylint
    pylint.extensions.dunder: pylint
    pylint.extensions.empty_comment: pylint
    pylint.extensions.eq_without_hash: pylint
    pylint.extensions.for_any_all: pylint
    pylint.extensions.magic_value: pylint
    pylint.extensions.mccabe: pylint
    pylint.extensions.no_self_use: pylint
    pylint.extensions.overlapping_exceptions: pylint
    pylint.extensions.private_import: pylint
    pylint.extensions.redefined_loop_name: pylint
    pylint.extensions.redefined_variable_type: pylint
    pylint.extensions.set_membership: pylint
    pylint.extensions.typing: pylint
    pylint.extensions.while_used: pylint
    pylint.graph: pylint
    pylint.interfaces: pylint
    pylint.lint: pylint
    pylint.lint.base_options: pylint
    pylint.lint.caching: pylint
    pylint.lint.expand_modules: pylint
    pylint.lint.message_state_handler: pylint
    pylint.lint.parallel: pylint
    pylint.lint.pylinter: pylint
    pylint.lint.report_functions: pylint
    pylint.lint.run: pylint
    pylint.lint.utils: pylint
    pylint.message: pylint
    pylint.message.message: pylint
    pylint.message.message_definition: pylint
    pylint.message.message_definition_store: pylint
    pylint.message.message_id_store: pylint
    pylint.pyreverse: pylint
    pylint.pyreverse.diadefslib: pylint
    pylint.pyreverse.diagrams: pylint
    pylint.pyreverse.dot_printer: pylint
    pylint.pyreverse.inspector: pylint
    pylint.pyreverse.main: pylint
    pylint.pyreverse.mermaidjs_printer: pylint
    pylint.pyreverse.plantuml_printer: pylint
    pylint.pyreverse.printer: pylint
    pylint.pyreverse.printer_factory: pylint
    pylint.pyreverse.utils: pylint
    pylint.pyreverse.writer: pylint
    pylint.reporters: pylint
    pylint.reporters.base_reporter: pylint
    pylint.reporters.collecting_reporter: pylint
    pylint.reporters.json_reporter: pylint
    pylint.reporters.multi_reporter: pylint
    pylint.reporters.reports_handler_mix_in: pylint
    pylint.reporters.text: pylint
    pylint.reporters.ureports: pylint
    pylint.reporters.ureports.base_writer: pylint
    pylint.reporters.ureports.nodes: pylint
    pylint.reporters.ureports.text_writer: pylint
    pylint.testutils: pylint
    pylint.testutils.checker_test_case: pylint
    pylint.testutils.configuration_test: pylint
    pylint.testutils.constants: pylint
    pylint.testutils.decorator: pylint
    pylint.testutils.functional: pylint
    pylint.testutils.functional.find_functional_tests: pylint
    pylint.testutils.functional.lint_module_output_update: pylint
    pylint.testutils.functional.test_file: pylint
    pylint.testutils.get_test_info: pylint
    pylint.testutils.global_test_linter: pylint
    pylint.testutils.lint_module_test: pylint
    pylint.testutils.output_line: pylint
    pylint.testutils.pyreverse: pylint
    pylint.testutils.reporter_for_tests: pylint
    pylint.testutils.tokenize_str: pylint
    pylint.testutils.unittest_linter: pylint
    pylint.testutils.utils: pylint
    pylint.typing: pylint
    pylint.utils: pylint
    pylint.utils.ast_walker: pylint
    pylint.utils.docs: pylint
    pylint.utils.file_state: pylint
    pylint.utils.linterstats: pylint
    pylint.utils.pragma_parser: pylint
    pylint.utils.utils: pylint
    pytest: pytest
    requests: requests
    requests.adapters: requests
    requests.api: requests
    requests.auth: requests
    requests.certs: requests
    requests.compat: requests
    requests.cookies: requests
    requests.exceptions: requests
    requests.help: requests
    requests.hooks: requests
    requests.models: requests
    requests.packages: requests
    requests.sessions: requests
    requests.status_codes: requests
    requests.structures: requests
    requests.utils: requests
    s3transfer: s3transfer
    s3transfer.bandwidth: s3transfer
    s3transfer.compat: s3transfer
    s3transfer.constants: s3transfer
    s3transfer.copies: s3transfer
    s3transfer.crt: s3transfer
    s3transfer.delete: s3transfer
    s3transfer.download: s3transfer
    s3transfer.exceptions: s3transfer
    s3transfer.futures: s3transfer
    s3transfer.manager: s3transfer
    s3transfer.processpool: s3transfer
    s3transfer.subscribers: s3transfer
    s3transfer.tasks: s3transfer
    s3transfer.upload: s3transfer
    s3transfer.utils: s3transfer
    scramp: scramp
    scramp.core: scramp
    scramp.utils: scramp
    six: six
    socks: PySocks
    sockshandler: PySocks
    sqlalchemy: SQLAlchemy
    sqlalchemy.connectors: SQLAlchemy
    sqlalchemy.connectors.aioodbc: SQLAlchemy
    sqlalchemy.connectors.asyncio: SQLAlchemy
    sqlalchemy.connectors.pyodbc: SQLAlchemy
    sqlalchemy.cyextension: SQLAlchemy
    sqlalchemy.cyextension.collections: SQLAlchemy
    sqlalchemy.cyextension.immutabledict: SQLAlchemy
    sqlalchemy.cyextension.processors: SQLAlchemy
    sqlalchemy.cyextension.resultproxy: SQLAlchemy
    sqlalchemy.cyextension.util: SQLAlchemy
    sqlalchemy.dialects: SQLAlchemy
    sqlalchemy.dialects.mssql: SQLAlchemy
    sqlalchemy.dialects.mssql.aioodbc: SQLAlchemy
    sqlalchemy.dialects.mssql.base: SQLAlchemy
    sqlalchemy.dialects.mssql.information_schema: SQLAlchemy
    sqlalchemy.dialects.mssql.json: SQLAlchemy
    sqlalchemy.dialects.mssql.provision: SQLAlchemy
    sqlalchemy.dialects.mssql.pymssql: SQLAlchemy
    sqlalchemy.dialects.mssql.pyodbc: SQLAlchemy
    sqlalchemy.dialects.mysql: SQLAlchemy
    sqlalchemy.dialects.mysql.aiomysql: SQLAlchemy
    sqlalchemy.dialects.mysql.asyncmy: SQLAlchemy
    sqlalchemy.dialects.mysql.base: SQLAlchemy
    sqlalchemy.dialects.mysql.cymysql: SQLAlchemy
    sqlalchemy.dialects.mysql.dml: SQLAlchemy
    sqlalchemy.dialects.mysql.enumerated: SQLAlchemy
    sqlalchemy.dialects.mysql.expression: SQLAlchemy
    sqlalchemy.dialects.mysql.json: SQLAlchemy
    sqlalchemy.dialects.mysql.mariadb: SQLAlchemy
    sqlalchemy.dialects.mysql.mariadbconnector: SQLAlchemy
    sqlalchemy.dialects.mysql.mysqlconnector: SQLAlchemy
    sqlalchemy.dialects.mysql.mysqldb: SQLAlchemy
    sqlalchemy.dialects.mysql.provision: SQLAlchemy
    sqlalchemy.dialects.mysql.pymysql: SQLAlchemy
    sqlalchemy.dialects.mysql.pyodbc: SQLAlchemy
    sqlalchemy.dialects.mysql.reflection: SQLAlchemy
    sqlalchemy.dialects.mysql.reserved_words: SQLAlchemy
    sqlalchemy.dialects.mysql.types: SQLAlchemy
    sqlalchemy.dialects.oracle: SQLAlchemy
    sqlalchemy.dialects.oracle.base: SQLAlchemy
    sqlalchemy.dialects.oracle.cx_oracle: SQLAlchemy
    sqlalchemy.dialects.oracle.dictionary: SQLAlchemy
    sqlalchemy.dialects.oracle.oracledb: SQLAlchemy
    sqlalchemy.dialects.oracle.provision: SQLAlchemy
    sqlalchemy.dialects.oracle.types: SQLAlchemy
    sqlalchemy.dialects.postgresql: SQLAlchemy
    sqlalchemy.dialects.postgresql.array: SQLAlchemy
    sqlalchemy.dialects.postgresql.asyncpg: SQLAlchemy
    sqlalchemy.dialects.postgresql.base: SQLAlchemy
    sqlalchemy.dialects.postgresql.dml: SQLAlchemy
    sqlalchemy.dialects.postgresql.ext: SQLAlchemy
    sqlalchemy.dialects.postgresql.hstore: SQLAlchemy
    sqlalchemy.dialects.postgresql.json: SQLAlchemy
    sqlalchemy.dialects.postgresql.named_types: SQLAlchemy
    sqlalchemy.dialects.postgresql.operators: SQLAlchemy
    sqlalchemy.dialects.postgresql.pg8000: SQLAlchemy
    sqlalchemy.dialects.postgresql.pg_catalog: SQLAlchemy
    sqlalchemy.dialects.postgresql.provision: SQLAlchemy
    sqlalchemy.dialects.postgresql.psycopg: SQLAlchemy
    sqlalchemy.dialects.postgresql.psycopg2: SQLAlchemy
    sqlalchemy.dialects.postgresql.psycopg2cffi: SQLAlchemy
    sqlalchemy.dialects.postgresql.ranges: SQLAlchemy
    sqlalchemy.dialects.postgresql.types: SQLAlchemy
    sqlalchemy.dialects.sqlite: SQLAlchemy
    sqlalchemy.dialects.sqlite.aiosqlite: SQLAlchemy
    sqlalchemy.dialects.sqlite.base: SQLAlchemy
    sqlalchemy.dialects.sqlite.dml: SQLAlchemy
    sqlalchemy.dialects.sqlite.json: SQLAlchemy
    sqlalchemy.dialects.sqlite.provision: SQLAlchemy
    sqlalchemy.dialects.sqlite.pysqlcipher: SQLAlchemy
    sqlalchemy.dialects.sqlite.pysqlite: SQLAlchemy
    sqlalchemy.engine: SQLAlchemy
    sqlalchemy.engine.base: SQLAlchemy
    sqlalchemy.engine.characteristics: SQLAlchemy
    sqlalchemy.engine.create: SQLAlchemy
    sqlalchemy.engine.cursor: SQLAlchemy
    sqlalchemy.engine.default: SQLAlchemy
    sqlalchemy.engine.events: SQLAlchemy
    sqlalchemy.engine.interfaces: SQLAlchemy
    sqlalchemy.engine.mock: SQLAlchemy
    sqlalchemy.engine.processors: SQLAlchemy
    sqlalchemy.engine.reflection: SQLAlchemy
    sqlalchemy.engine.result: SQLAlchemy
    sqlalchemy.engine.row: SQLAlchemy
    sqlalchemy.engine.strategies: SQLAlchemy
    sqlalchemy.engine.url: SQLAlchemy
    sqlalchemy.engine.util: SQLAlchemy
    sqlalchemy.event: SQLAlchemy
    sqlalchemy.event.api: SQLAlchemy
    sqlalchemy.event.attr: SQLAlchemy
    sqlalchemy.event.base: SQLAlchemy
    sqlalchemy.event.legacy: SQLAlchemy
    sqlalchemy.event.registry: SQLAlchemy
    sqlalchemy.events: SQLAlchemy
    sqlalchemy.exc: SQLAlchemy
    sqlalchemy.ext: SQLAlchemy
    sqlalchemy.ext.associationproxy: SQLAlchemy
    sqlalchemy.ext.asyncio: SQLAlchemy
    sqlalchemy.ext.asyncio.base: SQLAlchemy
    sqlalchemy.ext.asyncio.engine: SQLAlchemy
    sqlalchemy.ext.asyncio.exc: SQLAlchemy
    sqlalchemy.ext.asyncio.result: SQLAlchemy
    sqlalchemy.ext.asyncio.scoping: SQLAlchemy
    sqlalchemy.ext.asyncio.session: SQLAlchemy
    sqlalchemy.ext.automap: SQLAlchemy
    sqlalchemy.ext.baked: SQLAlchemy
    sqlalchemy.ext.compiler: SQLAlchemy
    sqlalchemy.ext.declarative: SQLAlchemy
    sqlalchemy.ext.declarative.extensions: SQLAlchemy
    sqlalchemy.ext.horizontal_shard: SQLAlchemy
    sqlalchemy.ext.hybrid: SQLAlchemy
    sqlalchemy.ext.indexable: SQLAlchemy
    sqlalchemy.ext.instrumentation: SQLAlchemy
    sqlalchemy.ext.mutable: SQLAlchemy
    sqlalchemy.ext.mypy: SQLAlchemy
    sqlalchemy.ext.mypy.apply: SQLAlchemy
    sqlalchemy.ext.mypy.decl_class: SQLAlchemy
    sqlalchemy.ext.mypy.infer: SQLAlchemy
    sqlalchemy.ext.mypy.names: SQLAlchemy
    sqlalchemy.ext.mypy.plugin: SQLAlchemy
    sqlalchemy.ext.mypy.util: SQLAlchemy
    sqlalchemy.ext.orderinglist: SQLAlchemy
    sqlalchemy.ext.serializer: SQLAlchemy
    sqlalchemy.future: SQLAlchemy
    sqlalchemy.future.engine: SQLAlchemy
    sqlalchemy.inspection: SQLAlchemy
    sqlalchemy.log: SQLAlchemy
    sqlalchemy.orm: SQLAlchemy
    sqlalchemy.orm.attributes: SQLAlchemy
    sqlalchemy.orm.base: SQLAlchemy
    sqlalchemy.orm.bulk_persistence: SQLAlchemy
    sqlalchemy.orm.clsregistry: SQLAlchemy
    sqlalchemy.orm.collections: SQLAlchemy
    sqlalchemy.orm.context: SQLAlchemy
    sqlalchemy.orm.decl_api: SQLAlchemy
    sqlalchemy.orm.decl_base: SQLAlchemy
    sqlalchemy.orm.dependency: SQLAlchemy
    sqlalchemy.orm.descriptor_props: SQLAlchemy
    sqlalchemy.orm.dynamic: SQLAlchemy
    sqlalchemy.orm.evaluator: SQLAlchemy
    sqlalchemy.orm.events: SQLAlchemy
    sqlalchemy.orm.exc: SQLAlchemy
    sqlalchemy.orm.identity: SQLAlchemy
    sqlalchemy.orm.instrumentation: SQLAlchemy
    sqlalchemy.orm.interfaces: SQLAlchemy
    sqlalchemy.orm.loading: SQLAlchemy
    sqlalchemy.orm.mapped_collection: SQLAlchemy
    sqlalchemy.orm.mapper: SQLAlchemy
    sqlalchemy.orm.path_registry: SQLAlchemy
    sqlalchemy.orm.persistence: SQLAlchemy
    sqlalchemy.orm.properties: SQLAlchemy
    sqlalchemy.orm.query: SQLAlchemy
    sqlalchemy.orm.relationships: SQLAlchemy
    sqlalchemy.orm.scoping: SQLAlchemy
    sqlalchemy.orm.session: SQLAlchemy
    sqlalchemy.orm.state: SQLAlchemy
    sqlalchemy.orm.state_changes: SQLAlchemy
    sqlalchemy.orm.strategies: SQLAlchemy
    sqlalchemy.orm.strategy_options: SQLAlchemy
    sqlalchemy.orm.sync: SQLAlchemy
    sqlalchemy.orm.unitofwork: SQLAlchemy
    sqlalchemy.orm.util: SQLAlchemy
    sqlalchemy.orm.writeonly: SQLAlchemy
    sqlalchemy.pool: SQLAlchemy
    sqlalchemy.pool.base: SQLAlchemy
    sqlalchemy.pool.events: SQLAlchemy
    sqlalchemy.pool.impl: SQLAlchemy
    sqlalchemy.schema: SQLAlchemy
    sqlalchemy.sql: SQLAlchemy
    sqlalchemy.sql.annotation: SQLAlchemy
    sqlalchemy.sql.base: SQLAlchemy
    sqlalchemy.sql.cache_key: SQLAlchemy
    sqlalchemy.sql.coercions: SQLAlchemy
    sqlalchemy.sql.compiler: SQLAlchemy
    sqlalchemy.sql.crud: SQLAlchemy
    sqlalchemy.sql.ddl: SQLAlchemy
    sqlalchemy.sql.default_comparator: SQLAlchemy
    sqlalchemy.sql.dml: SQLAlchemy
    sqlalchemy.sql.elements: SQLAlchemy
    sqlalchemy.sql.events: SQLAlchemy
    sqlalchemy.sql.expression: SQLAlchemy
    sqlalchemy.sql.functions: SQLAlchemy
    sqlalchemy.sql.lambdas: SQLAlchemy
    sqlalchemy.sql.naming: SQLAlchemy
    sqlalchemy.sql.operators: SQLAlchemy
    sqlalchemy.sql.roles: SQLAlchemy
    sqlalchemy.sql.schema: SQLAlchemy
    sqlalchemy.sql.selectable: SQLAlchemy
    sqlalchemy.sql.sqltypes: SQLAlchemy
    sqlalchemy.sql.traversals: SQLAlchemy
    sqlalchemy.sql.type_api: SQLAlchemy
    sqlalchemy.sql.util: SQLAlchemy
    sqlalchemy.sql.visitors: SQLAlchemy
    sqlalchemy.testing: SQLAlchemy
    sqlalchemy.testing.assertions: SQLAlchemy
    sqlalchemy.testing.assertsql: SQLAlchemy
    sqlalchemy.testing.asyncio: SQLAlchemy
    sqlalchemy.testing.config: SQLAlchemy
    sqlalchemy.testing.engines: SQLAlchemy
    sqlalchemy.testing.entities: SQLAlchemy
    sqlalchemy.testing.exclusions: SQLAlchemy
    sqlalchemy.testing.fixtures: SQLAlchemy
    sqlalchemy.testing.fixtures.base: SQLAlchemy
    sqlalchemy.testing.fixtures.mypy: SQLAlchemy
    sqlalchemy.testing.fixtures.orm: SQLAlchemy
    sqlalchemy.testing.fixtures.sql: SQLAlchemy
    sqlalchemy.testing.pickleable: SQLAlchemy
    sqlalchemy.testing.plugin: SQLAlchemy
    sqlalchemy.testing.plugin.bootstrap: SQLAlchemy
    sqlalchemy.testing.plugin.plugin_base: SQLAlchemy
    sqlalchemy.testing.plugin.pytestplugin: SQLAlchemy
    sqlalchemy.testing.profiling: SQLAlchemy
    sqlalchemy.testing.provision: SQLAlchemy
    sqlalchemy.testing.requirements: SQLAlchemy
    sqlalchemy.testing.schema: SQLAlchemy
    sqlalchemy.testing.suite: SQLAlchemy
    sqlalchemy.testing.suite.test_cte: SQLAlchemy
    sqlalchemy.testing.suite.test_ddl: SQLAlchemy
    sqlalchemy.testing.suite.test_deprecations: SQLAlchemy
    sqlalchemy.testing.suite.test_dialect: SQLAlchemy
    sqlalchemy.testing.suite.test_insert: SQLAlchemy
    sqlalchemy.testing.suite.test_reflection: SQLAlchemy
    sqlalchemy.testing.suite.test_results: SQLAlchemy
    sqlalchemy.testing.suite.test_rowcount: SQLAlchemy
    sqlalchemy.testing.suite.test_select: SQLAlchemy
    sqlalchemy.testing.suite.test_sequence: SQLAlchemy
    sqlalchemy.testing.suite.test_types: SQLAlchemy
    sqlalchemy.testing.suite.test_unicode_ddl: SQLAlchemy
    sqlalchemy.testing.suite.test_update_delete: SQLAlchemy
    sqlalchemy.testing.util: SQLAlchemy
    sqlalchemy.testing.warnings: SQLAlchemy
    sqlalchemy.types: SQLAlchemy
    sqlalchemy.util: SQLAlchemy
    sqlalchemy.util.compat: SQLAlchemy
    sqlalchemy.util.concurrency: SQLAlchemy
    sqlalchemy.util.deprecations: SQLAlchemy
    sqlalchemy.util.langhelpers: SQLAlchemy
    sqlalchemy.util.preloaded: SQLAlchemy
    sqlalchemy.util.queue: SQLAlchemy
    sqlalchemy.util.tool_support: SQLAlchemy
    sqlalchemy.util.topological: SQLAlchemy
    sqlalchemy.util.typing: SQLAlchemy
    toml: toml
    toml.decoder: toml
    toml.encoder: toml
    toml.ordered: toml
    toml.tz: toml
    tomli: tomli
    tomlkit: tomlkit
    tomlkit.api: tomlkit
    tomlkit.container: tomlkit
    tomlkit.exceptions: tomlkit
    tomlkit.items: tomlkit
    tomlkit.parser: tomlkit
    tomlkit.source: tomlkit
    tomlkit.toml_char: tomlkit
    tomlkit.toml_document: tomlkit
    tomlkit.toml_file: tomlkit
    typing_extensions: typing_extensions
    urllib3: urllib3
    urllib3.connection: urllib3
    urllib3.connectionpool: urllib3
    urllib3.contrib: urllib3
    urllib3.contrib.emscripten: urllib3
    urllib3.contrib.emscripten.connection: urllib3
    urllib3.contrib.emscripten.fetch: urllib3
    urllib3.contrib.emscripten.request: urllib3
    urllib3.contrib.emscripten.response: urllib3
    urllib3.contrib.pyopenssl: urllib3
    urllib3.contrib.socks: urllib3
    urllib3.exceptions: urllib3
    urllib3.fields: urllib3
    urllib3.filepost: urllib3
    urllib3.http2: urllib3
    urllib3.poolmanager: urllib3
    urllib3.response: urllib3
    urllib3.util: urllib3
    urllib3.util.connection: urllib3
    urllib3.util.proxy: urllib3
    urllib3.util.request: urllib3
    urllib3.util.response: urllib3
    urllib3.util.retry: urllib3
    urllib3.util.ssl_: urllib3
    urllib3.util.ssl_match_hostname: urllib3
    urllib3.util.ssltransport: urllib3
    urllib3.util.timeout: urllib3
    urllib3.util.url: urllib3
    urllib3.util.util: urllib3
    urllib3.util.wait: urllib3
    virtualenv: virtualenv
    virtualenv.activation: virtualenv
    virtualenv.activation.activator: virtualenv
    virtualenv.activation.bash: virtualenv
    virtualenv.activation.batch: virtualenv
    virtualenv.activation.cshell: virtualenv
    virtualenv.activation.fish: virtualenv
    virtualenv.activation.nushell: virtualenv
    virtualenv.activation.powershell: virtualenv
    virtualenv.activation.python: virtualenv
    virtualenv.activation.python.activate_this: virtualenv
    virtualenv.activation.via_template: virtualenv
    virtualenv.app_data: virtualenv
    virtualenv.app_data.base: virtualenv
    virtualenv.app_data.na: virtualenv
    virtualenv.app_data.read_only: virtualenv
    virtualenv.app_data.via_disk_folder: virtualenv
    virtualenv.app_data.via_tempdir: virtualenv
    virtualenv.config: virtualenv
    virtualenv.config.cli: virtualenv
    virtualenv.config.cli.parser: virtualenv
    virtualenv.config.convert: virtualenv
    virtualenv.config.env_var: virtualenv
    virtualenv.config.ini: virtualenv
    virtualenv.create: virtualenv
    virtualenv.create.creator: virtualenv
    virtualenv.create.debug: virtualenv
    virtualenv.create.describe: virtualenv
    virtualenv.create.pyenv_cfg: virtualenv
    virtualenv.create.via_global_ref: virtualenv
    virtualenv.create.via_global_ref.api: virtualenv
    virtualenv.create.via_global_ref.builtin: virtualenv
    virtualenv.create.via_global_ref.builtin.builtin_way: virtualenv
    virtualenv.create.via_global_ref.builtin.cpython: virtualenv
    virtualenv.create.via_global_ref.builtin.cpython.common: virtualenv
    virtualenv.create.via_global_ref.builtin.cpython.cpython3: virtualenv
    virtualenv.create.via_global_ref.builtin.cpython.mac_os: virtualenv
    virtualenv.create.via_global_ref.builtin.pypy: virtualenv
    virtualenv.create.via_global_ref.builtin.pypy.common: virtualenv
    virtualenv.create.via_global_ref.builtin.pypy.pypy3: virtualenv
    virtualenv.create.via_global_ref.builtin.ref: virtualenv
    virtualenv.create.via_global_ref.builtin.via_global_self_do: virtualenv
    virtualenv.create.via_global_ref.store: virtualenv
    virtualenv.create.via_global_ref.venv: virtualenv
    virtualenv.discovery: virtualenv
    virtualenv.discovery.builtin: virtualenv
    virtualenv.discovery.cached_py_info: virtualenv
    virtualenv.discovery.discover: virtualenv
    virtualenv.discovery.py_info: virtualenv
    virtualenv.discovery.py_spec: virtualenv
    virtualenv.discovery.windows: virtualenv
    virtualenv.discovery.windows.pep514: virtualenv
    virtualenv.info: virtualenv
    virtualenv.report: virtualenv
    virtualenv.run: virtualenv
    virtualenv.run.plugin: virtualenv
    virtualenv.run.plugin.activators: virtualenv
    virtualenv.run.plugin.base: virtualenv
    virtualenv.run.plugin.creators: virtualenv
    virtualenv.run.plugin.discovery: virtualenv
    virtualenv.run.plugin.seeders: virtualenv
    virtualenv.run.session: virtualenv
    virtualenv.seed: virtualenv
    virtualenv.seed.embed: virtualenv
    virtualenv.seed.embed.base_embed: virtualenv
    virtualenv.seed.embed.pip_invoke: virtualenv
    virtualenv.seed.embed.via_app_data: virtualenv
    virtualenv.seed.embed.via_app_data.pip_install: virtualenv
    virtualenv.seed.embed.via_app_data.pip_install.base: virtualenv
    virtualenv.seed.embed.via_app_data.pip_install.copy: virtualenv
    virtualenv.seed.embed.via_app_data.pip_install.symlink: virtualenv
    virtualenv.seed.embed.via_app_data.via_app_data: virtualenv
    virtualenv.seed.seeder: virtualenv
    virtualenv.seed.wheels: virtualenv
    virtualenv.seed.wheels.acquire: virtualenv
    virtualenv.seed.wheels.bundle: virtualenv
    virtualenv.seed.wheels.embed: virtualenv
    virtualenv.seed.wheels.periodic_update: virtualenv
    virtualenv.seed.wheels.util: virtualenv
    virtualenv.util: virtualenv
    virtualenv.util.error: virtualenv
    virtualenv.util.lock: virtualenv
    virtualenv.util.path: virtualenv
    virtualenv.util.subprocess: virtualenv
    virtualenv.util.zipapp: virtualenv
    virtualenv.version: virtualenv
    werkzeug: werkzeug
    werkzeug.datastructures: werkzeug
    werkzeug.datastructures.accept: werkzeug
    werkzeug.datastructures.auth: werkzeug
    werkzeug.datastructures.cache_control: werkzeug
    werkzeug.datastructures.csp: werkzeug
    werkzeug.datastructures.etag: werkzeug
    werkzeug.datastructures.file_storage: werkzeug
    werkzeug.datastructures.headers: werkzeug
    werkzeug.datastructures.mixins: werkzeug
    werkzeug.datastructures.range: werkzeug
    werkzeug.datastructures.structures: werkzeug
    werkzeug.debug: werkzeug
    werkzeug.debug.console: werkzeug
    werkzeug.debug.repr: werkzeug
    werkzeug.debug.tbtools: werkzeug
    werkzeug.exceptions: werkzeug
    werkzeug.formparser: werkzeug
    werkzeug.http: werkzeug
    werkzeug.local: werkzeug
    werkzeug.middleware: werkzeug
    werkzeug.middleware.dispatcher: werkzeug
    werkzeug.middleware.http_proxy: werkzeug
    werkzeug.middleware.lint: werkzeug
    werkzeug.middleware.profiler: werkzeug
    werkzeug.middleware.proxy_fix: werkzeug
    werkzeug.middleware.shared_data: werkzeug
    werkzeug.routing: werkzeug
    werkzeug.routing.converters: werkzeug
    werkzeug.routing.exceptions: werkzeug
    werkzeug.routing.map: werkzeug
    werkzeug.routing.matcher: werkzeug
    werkzeug.routing.rules: werkzeug
    werkzeug.sansio: werkzeug
    werkzeug.sansio.http: werkzeug
    werkzeug.sansio.multipart: werkzeug
    werkzeug.sansio.request: werkzeug
    werkzeug.sansio.response: werkzeug
    werkzeug.sansio.utils: werkzeug
    werkzeug.security: werkzeug
    werkzeug.serving: werkzeug
    werkzeug.test: werkzeug
    werkzeug.testapp: werkzeug
    werkzeug.urls: werkzeug
    werkzeug.user_agent: werkzeug
    werkzeug.utils: werkzeug
    werkzeug.wrappers: werkzeug
    werkzeug.wrappers.request: werkzeug
    werkzeug.wrappers.response: werkzeug
    werkzeug.wsgi: werkzeug
    wrapt: wrapt
    wrapt.arguments: wrapt
    wrapt.decorators: wrapt
    wrapt.importer: wrapt
    wrapt.patches: wrapt
    wrapt.weakrefs: wrapt
    wrapt.wrappers: wrapt
    yaml: PyYAML
    yaml.composer: PyYAML
    yaml.constructor: PyYAML
    yaml.cyaml: PyYAML
    yaml.dumper: PyYAML
    yaml.emitter: PyYAML
    yaml.error: PyYAML
    yaml.events: PyYAML
    yaml.loader: PyYAML
    yaml.nodes: PyYAML
    yaml.parser: PyYAML
    yaml.reader: PyYAML
    yaml.representer: PyYAML
    yaml.resolver: PyYAML
    yaml.scanner: PyYAML
    yaml.serializer: PyYAML
    yaml.tokens: PyYAML
    zipp: zipp
    zipp.compat: zipp
    zipp.compat.py310: zipp
    zipp.glob: zipp
  pip_repository:
    name: py_deps
integrity: 16526764fd066787fd0d786c32d5660bbec64890c5fab67edf761c75c301fd4c
