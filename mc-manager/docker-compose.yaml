version: '3'
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: shaldengeki/mc-manager-api
    ports:
      - "5000:5000"
    volumes:
      - ./api:/usr/src/app
    environment:
      - PORT=5000
      - FLASK_ENV=development
      - DB_HOST=pg
      - DB_USERNAME=admin
      - DB_PASSWORD=development
      - DATABASE_NAME=api_development
  migration:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: shaldengeki/mc-manager-api
    volumes:
      - ./api:/usr/src/app
    command: ["./scripts/wait-for-postgres.sh", "flask", "db", "upgrade"]
    environment:
      - FLASK_ENV=development
      - DB_HOST=pg
      - DB_USERNAME=admin
      - DB_PASSWORD=development
      - DATABASE_NAME=api_development
    depends_on:
      - pg
  pg:
    image: postgres:alpine
    restart: always
    ports:
        - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=development
      - POSTGRES_USER=admin
      - POSTGRES_DB=api_development
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: shaldengeki/mc-manager-frontend
    ports:
      - "5001:5001"
    stdin_open: true
    volumes:
      - ./frontend/src:/usr/src/app/src
    environment:
      - PORT=5001
