version: '3'
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: api
    environment:
      - PORT
      - FLASK_ENV
      - DB_HOST
      - DB_USERNAME
      - DB_PASSWORD
      - DATABASE_NAME
      - FRONTEND_HOST
      - FRONTEND_PORT
  migration:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: api
    command: ["flask", "db", "upgrade"]
    environment:
      - FLASK_ENV
      - DB_HOST
      - DB_USERNAME
      - DB_PASSWORD
      - DATABASE_NAME
    depends_on:
      - pg
  pg:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    volumes:
      - fitbit-challenges-pg:/var/lib/postgresql/data
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    environment:
      - PORT=5001
      - REACT_APP_API_HOST
      - REACT_APP_API_PORT
      - REACT_APP_API_PROTOCOL
volumes:
  fitbit-challenges-pg:
